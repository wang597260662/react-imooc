{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpmanage/index.js\";\nimport React, { Component } from 'react';\nimport FormItem from 'antd/lib/form/FormItem';\nimport { Module } from 'module';\n\nvar CpManage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CpManage, _Component);\n\n  function CpManage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CpManage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CpManage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataSource: [],\n      isVisible: false\n    };\n    _this.params = {\n      page: 1 //删除商户\n\n    };\n\n    _this.handleDelete = function (item) {\n      var id = item.id;\n\n      _Modal.confirm({\n        title: '确定',\n        content: '您确认要删除这条数据吗？',\n        onOk: function onOk() {\n          //请求接口删除\n          _message.success(\"删除成功!\");\n        }\n      });\n    };\n\n    _this.handleEdit = function (item) {};\n\n    _this.handleAddMerchant = function () {};\n\n    return _this;\n  }\n\n  _createClass(CpManage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //设置列名\n      var columns = [{\n        title: 'Id',\n        dataIndex: 'id'\n      }, {\n        title: '商户号',\n        dataIndex: 'merchantNo'\n      }, {\n        title: '商户名称',\n        dataIndex: 'address'\n      }, {\n        title: '密码',\n        dataIndex: 'merchantPwd'\n      }, {\n        title: '操作',\n        render: function render(record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(_Icon, {\n            tye: \"edit\",\n            onClick: function onClick() {\n              return _this2.handleOperate();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }), React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }), React.createElement(_Icon, {\n            tye: \"detele\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }));\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(FilterForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.handleAddMerchant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u5546\\u6237\")), React.createElement(_Table, {\n        bordered: true,\n        columns: columns,\n        dataSource: this.state.dataSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CpManage;\n}(Component);\n\nexport { CpManage as default };\n\nvar FilterForm =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(FilterForm, _Component2);\n\n  function FilterForm() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, FilterForm);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(FilterForm)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this3.handleReset = function () {\n      _this3.props.form.resetFields();\n    };\n\n    _this3.handleSubmit = function () {};\n\n    return _this3;\n  }\n\n  _createClass(FilterForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"\\u5546\\u6237\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, getFieldDecorator('merchantNo')(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u67E5\\u8BE2\\u7684\\u5546\\u6237\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"\\u5546\\u6237\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, getFieldDecorator('merchantName')(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u67E5\\u8BE2\\u7684\\u5546\\u6237\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        onClick: this.handleSubmit,\n        type: \"primary\",\n        style: {\n          margin: '0 20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" \\u67E5\\u8BE2\"), React.createElement(_Button, {\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\")));\n    }\n  }]);\n\n  return FilterForm;\n}(Component);\n\nFilterForm = _Form.create({})(FilterForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpmanage/index.js"],"names":["React","Component","FormItem","Module","CpManage","state","dataSource","isVisible","params","page","handleDelete","item","id","confirm","title","content","onOk","success","handleEdit","handleAddMerchant","columns","dataIndex","render","record","handleOperate","FilterForm","handleReset","props","form","resetFields","handleSubmit","getFieldDecorator","margin","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FormItem from 'antd/lib/form/FormItem';\nimport { Card, message, Form, Input, Button, Table, Icon, Divider, Modal } from 'antd'\nimport { Module } from 'module';\nexport default class CpManage extends Component {\n\n    state = {\n        dataSource: [],\n        isVisible:false\n    }\n    params = {\n        page: 1\n    }\n\n    //删除商户\n    handleDelete = (item) => {\n        let id = item.id;\n        Modal.confirm({\n            title: '确定',\n            content: '您确认要删除这条数据吗？',\n            onOk: () => {\n                //请求接口删除\n                message.success(\"删除成功!\");\n\n            }\n        })\n\n    }\n\n    //编辑商户\n    handleEdit = (item) => {\n\n\n    }\n\n    //新增商户\n    handleAddMerchant = () => {\n\n    }\n    render() {\n\n\n    \n        //设置列名\n        const columns = [{\n            title: 'Id',\n            dataIndex: 'id'\n        }, {\n            title: '商户号',\n            dataIndex: 'merchantNo'\n        }, {\n            title: '商户名称',\n            dataIndex: 'address'\n\n        }, {\n            title: '密码',\n            dataIndex: 'merchantPwd'\n        }, {\n            title: '操作',\n            render: (record) => (\n                <span>\n                    <Icon tye='edit' onClick={()=>this.handleOperate()}  ></Icon>\n                    <Divider type=\"vertical\" />\n                    <Icon tye='detele'></Icon>\n                </span>\n\n            )\n        }];\n\n\n\n        return (\n            <div>\n                <Card >\n                    <FilterForm />\n                </Card>\n\n                <Card>\n                    <Button type='primary' onClick={this.handleAddMerchant}>新增商户</Button>\n                </Card>\n\n                <Table\n                    bordered\n                    columns={columns}\n                    dataSource={this.state.dataSource}\n                />\n            </div>\n        );\n    }\n\n}\n\nclass FilterForm extends Component {\n\n    handleReset = () => {\n        this.props.form.resetFields();\n    }\n    handleSubmit = () => {\n\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                <FormItem label='商户号'>\n                    {getFieldDecorator('merchantNo')(\n                        <Input placeholder=\"请输入查询的商户号\" />\n                    )}\n                </FormItem>\n                <FormItem label='商户名称'>\n                    {getFieldDecorator('merchantName')(\n                        <Input placeholder=\"请输入查询的商户名称\" />\n                    )}\n                </FormItem>\n\n                <FormItem>\n                    <Button onClick={this.handleSubmit} type='primary' style={{ margin: '0 20px' }}> 查询</Button>\n                    <Button onClick={this.handleReset}>重置</Button>\n                </FormItem>\n\n            </Form>);\n    }\n\n}\nFilterForm = Form.create({})(FilterForm);"]},"metadata":{},"sourceType":"module"}