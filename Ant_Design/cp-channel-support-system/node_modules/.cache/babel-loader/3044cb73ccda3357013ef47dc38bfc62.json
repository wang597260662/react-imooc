{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelbind/index.js\";\nimport React, { Component } from 'react';\nimport BaseForm from './../../components/BaseForm/index';\nimport axios from './../../../src/axios/index';\nimport Utils from './../../utils/utils';\nimport CpChannelBindAddForm from './add';\nvar Option = _Select.Option;\nvar FormItem = _Form.Item;\n\nvar CpChannelBind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CpChannelBind, _Component);\n\n  function CpChannelBind() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, CpChannelBind);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CpChannelBind)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1,\n      pageSize: 20\n    };\n    _this2.expandedRowKeys = [\"id\", \"merchantNo\", \"merchantName\", \"appId\", \"businessName\", \"realType\"];\n\n    _this2.requestSelect = function () {\n      _this2.getCodeTypeList();\n    };\n\n    _this2.getCodeTypeList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getcodetyelist', {}, true, 'codeTypeList');\n    };\n\n    _this2.getMerchantList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getmerchantlist', {}, true, 'merchantList');\n    };\n\n    _this2.getAppIdList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getappidlist', {}, true, 'appIdList');\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/cpchannelbind/getcpchannelbindlist', _this2.params, true);\n    };\n\n    _this2.handleOperate = function (type) {\n      var items = _this2.state.selectedRows;\n\n      if (type) {\n        if (type == 'edit') {\n          if (!items || items.length == 0) {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个CP绑定通道信息!'\n            });\n\n            return;\n          }\n\n          if (items.length > 1) {\n            _Modal.info({\n              title: \"提示\",\n              content: '只能选择一个CP绑定通道信息编辑!'\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '编辑CP绑定通道信息',\n            cpChannelBind: items[0]\n          }); //显示编辑页面\n\n        } else if (type == 'delete') {\n          if (items && items.length >= 1) {\n            var _this = _assertThisInitialized(_this2);\n\n            var ids = '';\n            items.map(function (item) {\n              ids += item.id + '-';\n            });\n\n            _Modal.confirm({\n              title: '确认删除',\n              content: '是否要删除选中项',\n              onOk: function onOk() {\n                axios.ajax({\n                  url: '/cpchannelbind/delete',\n                  data: {\n                    params: {\n                      ids: ids\n                    }\n                  }\n                }).then(function (res) {\n                  if (res.code == 0) {\n                    _this.setState({\n                      isVisible: false,\n                      selectedRowKeys: null\n                    });\n\n                    _message.success(\"删除成功!\");\n\n                    _this.requestList();\n                  } else {\n                    _message.success(\"删除失败!\");\n                  }\n                });\n              }\n            });\n          } else {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个CP通道绑定信息!'\n            });\n\n            return;\n          }\n        } else if (type == 'create') {\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '创建CP通道绑定',\n            merchantInfo: null\n          });\n        }\n      }\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params.merchantNo = params.merchantNo;\n      _this2.params.merchantName = params.merchantName;\n      _this2.params.codeType = params.codeType;\n      _this2.params.businessName = params.businessName;\n      _this2.params.realType = params.realType;\n\n      _this2.requestList();\n    };\n\n    _this2.handleSubmit = function () {\n      var type = _this2.state.type;\n\n      _this2.cpChannelBindForm.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = _this2.cpChannelBindForm.props.form.getFieldsValue();\n\n          var info = type == 'create' ? '新增' : '编辑';\n          axios.ajax({\n            url: type == 'create' ? '/cpchannelbind/add' : '/cpchannelbind/edit',\n            data: {\n              params: data\n            }\n          }).then(function (res) {\n            if (res.code == 0) {\n              _this2.cpChannelBindForm.props.form.resetFields();\n\n              _this2.setState({\n                isVisible: false,\n                selectedRowKeys: null\n              });\n\n              _message.success(info + \"成功!\");\n\n              _this2.requestList();\n            } else {\n              _message.error(info + \"失败! \" + res.msg);\n            }\n          });\n        }\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(CpChannelBind, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n      this.requestSelect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formList = [{\n        type: 'INPUT',\n        label: '商户号',\n        field: 'merchantNo',\n        width: 200,\n        placeholder: '请输入查询的商户号'\n      }, {\n        type: 'INPUT',\n        label: '商户名称',\n        field: 'merchantName',\n        width: 200,\n        placeholder: '请输入查询的商户名称'\n      }, {\n        type: 'INPUT',\n        label: 'codeType',\n        field: 'codeType',\n        width: 200,\n        placeholder: '请输入查询的codeType'\n      }, {\n        type: 'INPUT',\n        label: '业务名称',\n        field: 'businessName',\n        width: 200,\n        placeholder: '请输入查询的业务名称'\n      }, {\n        type: 'INPUT',\n        label: '真实类型',\n        field: 'realType',\n        width: 200,\n        placeholder: '请输入查询的真实类型'\n      }]; //设置列名\n\n      var columns = [{\n        title: 'Id',\n        dataIndex: 'id',\n        width: 80\n      }, {\n        title: '商户号',\n        dataIndex: 'merchantNo',\n        width: 80\n      }, {\n        title: '商户名称',\n        dataIndex: 'merchantName',\n        width: 120\n      }, {\n        title: 'appId',\n        dataIndex: 'appId',\n        width: 80\n      }, {\n        title: 'codeType',\n        dataIndex: 'codeType',\n        width: 80\n      }, {\n        title: 'businessName',\n        dataIndex: 'businessName',\n        width: 100\n      }, {\n        title: 'realType',\n        dataIndex: 'realType',\n        width: 100\n      }, {\n        title: 'codeName',\n        dataIndex: 'codeName',\n        width: 0\n      }, {\n        title: 'codeProcess',\n        dataIndex: 'codeProcess',\n        width: 0\n      }]; //最前面的选择框\n\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        type: 'checkbox',\n        selectedRowKeys: selectedRowKeys,\n        columnWidth: 5,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \" \", React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(_Card, {\n        className: \"operate-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: function onClick() {\n          return _this3.handleOperate('create');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u7ED1\\u5B9A\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"edit\",\n        onClick: function onClick() {\n          return _this3.handleOperate('edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\\u7ED1\\u5B9A\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          return _this3.handleOperate('delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"\\u5220\\u9664\\u7ED1\\u5B9A\")), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        bordered: true,\n        size: \"small\",\n        columns: columns,\n        rowSelection: rowSelection,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        defaultExpandedRowKeys: this.expandedRowKeys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: this.state.title,\n        visible: this.state.isVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel() {\n          _this3.cpChannelBindAddForm.props.form.resetFields();\n\n          _this3.setState({\n            isVisible: false\n          });\n        },\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CpChannelBind;\n}(Component);\n\nexport { CpChannelBind as default };","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelbind/index.js"],"names":["React","Component","BaseForm","axios","Utils","CpChannelBindAddForm","Option","FormItem","Item","CpChannelBind","state","list","isVisible","params","page","pageSize","expandedRowKeys","requestSelect","getCodeTypeList","_this","getMerchantList","getAppIdList","requestList","handleOperate","type","items","selectedRows","length","info","title","content","setState","cpChannelBind","ids","map","item","id","confirm","onOk","ajax","url","data","then","res","code","selectedRowKeys","success","merchantInfo","handleFilter","merchantNo","merchantName","codeType","businessName","realType","handleSubmit","cpChannelBindForm","props","form","validateFields","err","values","getFieldsValue","resetFields","error","msg","formList","label","field","width","placeholder","columns","dataIndex","rowSelection","columnWidth","onChange","pagination","cpChannelBindAddForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport BaseForm from './../../components/BaseForm/index'\nimport axios from './../../../src/axios/index'\nimport { Select, Input,Modal,message,Card,Button,Table,Form ,Icon} from 'antd';\nimport Utils from './../../utils/utils'\nimport CpChannelBindAddForm from './add';\nconst Option = Select.Option;\nconst FormItem =Form.Item\nexport default class CpChannelBind extends Component {\n\n\n    state = {\n        list: [],\n        isVisible: false\n    }\n\n    params = {\n        page: 1,\n        pageSize: 20\n    }\n    expandedRowKeys=[\"id\",\"merchantNo\",\"merchantName\",\"appId\",\"businessName\",\"realType\",]\n\n    componentDidMount() {\n        this.requestList();\n        this.requestSelect();\n    }\n\n    requestSelect = () => {\n        this.getCodeTypeList();\n\n    }\n    //获取codeType信息\n    getCodeTypeList = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getcodetyelist', {}, true, 'codeTypeList');\n    }\n    //获取商户信息\n    getMerchantList = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getmerchantlist', {}, true, 'merchantList');\n    }\n    //获取AppidList\n    getAppIdList = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getappidlist', {}, true, 'appIdList');\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/cpchannelbind/getcpchannelbindlist', this.params, true);\n    }\n\n    handleOperate = (type) => {\n        let items = this.state.selectedRows;\n        if (type) {\n            if (type == 'edit') {\n                if (!items || items.length == 0) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个CP绑定通道信息!'\n                    })\n                    return;\n                }\n                if (items.length > 1) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '只能选择一个CP绑定通道信息编辑!'\n                    })\n                    return;\n                }\n\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '编辑CP绑定通道信息',\n                    cpChannelBind: items[0]\n                })\n\n\n                //显示编辑页面\n            } else if (type == 'delete') {\n                if (items && items.length >= 1) {\n                    let _this = this;\n                    let ids = '';\n                    items.map((item) => {\n                        ids += (item.id) + '-';\n                    })\n                    Modal.confirm({\n                        title: '确认删除',\n                        content: '是否要删除选中项',\n                        onOk() {\n                            axios.ajax({\n                                url: '/cpchannelbind/delete',\n                                data: {\n                                    params: {\n                                        ids: ids\n                                    }\n                                }\n                            }).then((res) => {\n                                if (res.code == 0) {\n                                    _this.setState({\n                                        isVisible: false,\n                                        selectedRowKeys: null\n                                    })\n                                    message.success(\"删除成功!\");\n                                    _this.requestList();\n\n                                } else {\n                                    message.success(\"删除失败!\");\n                                }\n\n                            })\n                        }\n\n                    })\n\n                } else {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个CP通道绑定信息!'\n                    })\n                    return;\n                }\n            } else if (type == 'create') {\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '创建CP通道绑定',\n                    merchantInfo: null\n                }\n                )\n            }\n        }\n\n    }\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params.merchantNo = params.merchantNo;\n        this.params.merchantName = params.merchantName;\n        this.params.codeType = params.codeType;\n        this.params.businessName = params.businessName;\n        this.params.realType = params.realType;\n        this.requestList();\n    }\n\n    // 创建/编辑cp绑定信息提交\n    handleSubmit = () => {\n        let type = this.state.type;\n        this.cpChannelBindForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = this.cpChannelBindForm.props.form.getFieldsValue();\n                let info = type == 'create' ? '新增' : '编辑';\n                axios.ajax({\n                    url: type == 'create' ? '/cpchannelbind/add' : '/cpchannelbind/edit',\n                    data: {\n                        params: data\n                    }\n                }).then((res) => {\n                    if (res.code == 0) {\n                        this.cpChannelBindForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false,\n                            selectedRowKeys: null\n                        })\n                        message.success(info + \"成功!\");\n                        this.requestList();\n\n                    } else {\n                        message.error(info + \"失败! \" + res.msg);\n                    }\n                })\n            }\n        });\n\n    }\n\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '商户号',\n                field: 'merchantNo',\n                width: 200,\n                placeholder: '请输入查询的商户号'\n            }, {\n                type: 'INPUT',\n                label: '商户名称',\n                field: 'merchantName',\n                width: 200,\n                placeholder: '请输入查询的商户名称'\n            }\n            , {\n                type: 'INPUT',\n                label: 'codeType',\n                field: 'codeType',\n                width: 200,\n                placeholder: '请输入查询的codeType'\n            }, {\n                type: 'INPUT',\n                label: '业务名称',\n                field: 'businessName',\n                width: 200,\n                placeholder: '请输入查询的业务名称'\n            }\n            , {\n                type: 'INPUT',\n                label: '真实类型',\n                field: 'realType',\n                width: 200,\n                placeholder: '请输入查询的真实类型'\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: 'Id',\n            dataIndex: 'id',\n            width: 80\n        }, {\n            title: '商户号',\n            dataIndex: 'merchantNo',\n            width: 80\n        }, {\n            title: '商户名称',\n            dataIndex: 'merchantName',\n            width: 120\n        }, {\n            title: 'appId',\n            dataIndex: 'appId',\n            width: 80\n        }, {\n            title: 'codeType',\n            dataIndex: 'codeType',\n            width: 80\n        }, {\n            title: 'businessName',\n            dataIndex: 'businessName',\n            width: 100\n        }, {\n            title: 'realType',\n            dataIndex: 'realType',\n            width: 100\n        } ,{\n            title: 'codeName',\n            dataIndex: 'codeName',\n            width: 0\n        }, {\n            title: 'codeProcess',\n            dataIndex: 'codeProcess',\n            width: 0\n        }\n    \n    ];\n        //最前面的选择框\n        const selectedRowKeys = this.state.selectedRowKeys;\n\n        const rowSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            columnWidth: 5,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n\n        return (\n            <div> <Card >\n                <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n            </Card>\n\n                <Card className='operate-wrap'>\n                    <Button type='primary' icon='plus' onClick={() => this.handleOperate('create')}>新增绑定</Button>\n                    <Button type='primary' icon='edit' onClick={() => this.handleOperate('edit')}>编辑绑定</Button>\n                    <Button type='primary' icon='delete' onClick={() => this.handleOperate('delete')}>删除绑定</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        columns={columns}\n                        rowSelection={rowSelection}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                        defaultExpandedRowKeys={this.expandedRowKeys}\n                    />\n\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={() => {\n                        this.cpChannelBindAddForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false\n                        })\n                    }}\n                    width={600}\n                />\n             \n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}