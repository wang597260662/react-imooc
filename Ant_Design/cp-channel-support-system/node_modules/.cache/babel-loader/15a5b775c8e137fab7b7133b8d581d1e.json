{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/dsmanage/indes.js\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport FormItem from 'antd/lib/form/FormItem';\nimport BaseForm from './../../components/BaseForm/';\nimport axios from '../../axios';\n\nvar DsManage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DsManage, _Component);\n\n  function DsManage() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, DsManage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DsManage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1,\n      pageSize: 20\n    };\n\n    _this2.handleOperate = function (type) {\n      var items = _this2.state.selectedRows;\n\n      if (type) {\n        if (type == 'edit') {\n          if (!items || items.length == 0) {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个下行'\n            });\n\n            return;\n          }\n\n          if (items.length > 1) {\n            _Modal.info({\n              title: \"提示\",\n              content: '只能选择一个下行编辑'\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '编辑下行',\n            dsInfo: items[0]\n          }); //显示编辑页面\n\n        } else if (type == 'delete') {\n          if (items && items.length >= 1) {\n            //删除用户\n            var _this = _assertThisInitialized(_this2);\n\n            var ids = '';\n            items.map(function (item) {\n              ids += item.id + '-';\n            });\n\n            _Modal.confirm({\n              title: '确认删除',\n              content: '是否要删除选中项',\n              onOk: function onOk() {\n                axios.ajax({\n                  url: '/cpmanage/delete',\n                  data: {\n                    params: {\n                      ids: ids\n                    }\n                  }\n                }).then(function (res) {\n                  if (res.code == 0) {\n                    _this.setState({\n                      isVisible: false,\n                      selectedRowKeys: null\n                    });\n\n                    _message.success(\"删除成功!\");\n\n                    _this.requestList();\n                  } else {\n                    _message.success(\"删除失败!\");\n                  }\n                });\n              }\n            });\n          } else {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个商户'\n            });\n\n            return;\n          }\n        } else if (type == 'create') {\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '创建商户',\n            dsInfo: null\n          });\n        }\n      }\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params.businessName = params.businessName;\n      _this2.params.dsType = params.dsType;\n      _this2.params.dsPort = params.dsPort;\n\n      _this2.requestList();\n    };\n\n    _this2.handleSubmit = function () {\n      var type = _this2.state.type;\n\n      _this2.merchantForm.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = _this2.merchantForm.props.form.getFieldsValue();\n\n          var info = type == 'create' ? '新增' : '编辑';\n          axios.ajax({\n            url: type == 'create' ? '/cpmanage/add' : '/cpmanage/edit',\n            data: {\n              params: data\n            }\n          }).then(function (res) {\n            if (res.code == 0) {\n              _this2.merchantForm.props.form.resetFields();\n\n              _this2.setState({\n                isVisible: false,\n                selectedRowKeys: null\n              });\n\n              _message.success(info + \"成功!\");\n\n              _this2.requestList();\n            } else {\n              _message.error(info + \"失败! \" + res.msg);\n            }\n          });\n        }\n      });\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/dsmanage/getdslist', _this2.params, true);\n    };\n\n    return _this2;\n  }\n\n  _createClass(DsManage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formList = [{\n        type: 'INPUT',\n        label: '业务名称',\n        field: 'businessName',\n        width: 200,\n        placeholder: '请输入业务名称'\n      }, {\n        type: 'SELECT',\n        label: '下行类型',\n        field: 'dsType',\n        width: 100,\n        list: [{\n          id: 1,\n          name: '二次确认'\n        }, {\n          id: 2,\n          name: '验证码'\n        }, {\n          id: 3,\n          name: '订购成功下行'\n        }]\n      }, {\n        type: 'INPUT',\n        label: '端口号',\n        field: 'dsPort',\n        width: 200,\n        placeholder: '请输入端口号'\n      }]; //设置列名\n\n      var columns = [{\n        title: 'Id',\n        dataIndex: 'id',\n        width: 80\n      }, {\n        title: '业务名称',\n        dataIndex: 'businessName',\n        width: 80\n      }, {\n        title: '下行类型',\n        dataIndex: 'dsType',\n        width: 80\n      }, {\n        title: '端口号',\n        dataIndex: 'dsPort',\n        width: 80\n      }, {\n        title: '内容',\n        dataIndex: 'dsContent',\n        width: 120\n      }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        width: 80\n      }, {\n        title: '更新时间',\n        dataIndex: 'updateTime',\n        width: 80\n      }];\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        type: 'checkbox',\n        selectedRowKeys: selectedRowKeys,\n        columnWidth: 5,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), React.createElement(_Card, {\n        className: \"operate-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: function onClick() {\n          return _this3.handleOperate('create');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u4E0B\\u884C\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"edit\",\n        onClick: function onClick() {\n          return _this3.handleOperate('edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\\u4E0B\\u884C\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          return _this3.handleOperate('delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"\\u5220\\u9664\\u4E0B\\u884C\")), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        bordered: true,\n        size: \"small\",\n        scroll: {\n          y: 240\n        },\n        columns: columns,\n        rowSelection: rowSelection,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: this.state.title,\n        visible: this.state.isVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel() {\n          _this3.dsForm.props.form.resetFields();\n\n          _this3.setState({\n            isVisible: false\n          });\n        },\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(DSForm, {\n        type: this.state.type,\n        dsInfo: this.state.dsInfo,\n        wrappedComponentRef: function wrappedComponentRef(inst) {\n          _this3.dsForm = inst;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DsManage;\n}(Component);\n\nexport { DsManage as default };\n\nvar DSForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DSForm, _React$Component);\n\n  function DSForm() {\n    _classCallCheck(this, DSForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DSForm).apply(this, arguments));\n  }\n\n  _createClass(DSForm, [{\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n      var dsInfo = this.props.dsInfo || {};\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      };\n      return React.createElement(_Form, {\n        layout: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u53F7\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.merchantNo : getFieldDecorator('merchantNo', {\n        initialValue: dsInfo.merchantNo,\n        rules: [{\n          required: true,\n          message: '请输入商户号!'\n        }, {\n          min: 5,\n          max: 10,\n          message: \"商户号长度不符合[5-10位]!\"\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u540D\\u79F0\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.merchantName : getFieldDecorator('merchantName', {\n        initialValue: dsInfo.merchantName,\n        rules: [{\n          required: true,\n          message: '请输入商户名称!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u5BC6\\u7801\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.merchantPwd : getFieldDecorator('merchantPwd', {\n        initialValue: dsInfo.merchantPwd,\n        rules: [{\n          required: true,\n          message: '请输入商户密码!'\n        }, {\n          min: 5,\n          max: 10,\n          message: \"商户密码长度不符合[5-10位]!\"\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DSForm;\n}(React.Component);\n\nDSForm = _Form.create({})(DSForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/dsmanage/indes.js"],"names":["React","Component","FormItem","BaseForm","axios","DsManage","state","list","isVisible","params","page","pageSize","handleOperate","type","items","selectedRows","length","info","title","content","setState","dsInfo","_this","ids","map","item","id","confirm","onOk","ajax","url","data","then","res","code","selectedRowKeys","success","requestList","handleFilter","businessName","dsType","dsPort","handleSubmit","merchantForm","props","form","validateFields","err","values","getFieldsValue","resetFields","error","msg","formList","label","field","width","placeholder","name","columns","dataIndex","rowSelection","columnWidth","onChange","y","pagination","dsForm","inst","DSForm","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","merchantNo","initialValue","rules","required","message","min","max","merchantName","merchantPwd","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.less'\nimport FormItem from 'antd/lib/form/FormItem';\nimport { Card, message, Form, Input, Button, Table, Icon, Divider, Modal } from 'antd'\nimport BaseForm from './../../components/BaseForm/'\nimport axios from '../../axios'\nexport default class DsManage extends Component {\n\n    state = {\n        list: [],\n        isVisible: false\n    }\n    params = {\n        page: 1,\n        pageSize:20\n    }\n\n    handleOperate = (type) => {\n        let items = this.state.selectedRows;\n        if (type) {\n            if (type == 'edit') {\n                if (!items||items.length==0) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个下行'\n                    })\n                    return;\n                }\n                if (items.length > 1) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '只能选择一个下行编辑'\n                    })\n                    return;\n                }\n\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '编辑下行',\n                    dsInfo:items[0]\n                })\n\n\n                //显示编辑页面\n            } else if (type == 'delete') {\n                if (items && items.length >= 1) {\n                    //删除用户\n                    let _this = this;\n                    let ids = '';\n                    items.map((item) => {\n                        ids+=(item.id)+'-';\n                    })\n                    Modal.confirm({\n                        title: '确认删除',\n                        content: '是否要删除选中项',\n                        onOk() {\n                            axios.ajax({\n                                url: '/cpmanage/delete',\n                                data: {\n                                    params: {\n                                        ids:ids\n                                    }\n                                }\n                            }).then((res) => {\n                                if (res.code == 0) {\n                                    _this.setState({\n                                        isVisible: false,\n                                        selectedRowKeys:null\n                                    })\n                                    message.success(\"删除成功!\");\n                                    _this.requestList();\n                                    \n                                } else {\n                                    message.success(\"删除失败!\");\n                                }\n\n                            })\n                        }\n\n                    })\n\n                } else {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个商户'\n                    })\n                    return;\n                }\n            } else if (type == 'create') {\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '创建商户',\n                    dsInfo:null\n                }\n                )\n            }\n        }\n\n    }\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params.businessName = params.businessName;\n        this.params.dsType = params.dsType;\n        this.params.dsPort = params.dsPort;\n        this.requestList();\n    }\n\n    // 创建/编辑商户提交\n    handleSubmit = ()=>{\n        let type = this.state.type;\n        this.merchantForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = this.merchantForm.props.form.getFieldsValue();\n                let info= type=='create'?'新增':'编辑';\n                axios.ajax({\n                    url:type=='create'?'/cpmanage/add':'/cpmanage/edit',\n                    data:{\n                        params: data\n                    }\n                }).then((res)=>{\n                    if(res.code ==0){\n                        this.merchantForm.props.form.resetFields();\n                        this.setState({\n                            isVisible:false,\n                            selectedRowKeys:null\n                        })\n                        message.success(info+\"成功!\");\n                        this.requestList();\n                    \n                    }else{\n                        message.error(info+\"失败! \"+res.msg);\n                    }\n                })\n            }\n          });\n       \n    }\n\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/dsmanage/getdslist', this.params, true);\n    }\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '业务名称',\n                field: 'businessName',\n                width: 200,\n                placeholder: '请输入业务名称'\n            }, {\n                type: 'SELECT',\n                label: '下行类型',\n                field: 'dsType',\n                width: 100,\n                list:[{id:1,name:'二次确认'},{id:2,name:'验证码'},{id:3,name:'订购成功下行'}]\n            }\n            , {\n                type: 'INPUT',\n                label: '端口号',\n                field: 'dsPort',\n                width: 200,\n                placeholder: '请输入端口号'\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: 'Id',\n            dataIndex: 'id',\n            width: 80\n        }, {\n            title: '业务名称',\n            dataIndex: 'businessName',\n            width: 80\n        }, {\n            title: '下行类型',\n            dataIndex: 'dsType',\n            width: 80\n        }, {\n            title: '端口号',\n            dataIndex: 'dsPort',\n            width: 80\n        }\n        , {\n            title: '内容',\n            dataIndex: 'dsContent',\n            width: 120\n\n        }, {\n            title: '创建时间',\n            dataIndex: 'createTime',\n            width: 80\n        }  , {\n            title: '更新时间',\n            dataIndex: 'updateTime',\n            width: 80\n        }\n    \n    ];\n        const selectedRowKeys = this.state.selectedRowKeys;\n\n        const rowSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            columnWidth: 5,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n\n        return (\n            <div>\n                <Card >\n                    <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n                </Card>\n\n                <Card className='operate-wrap'>\n                    <Button type='primary' icon='plus' onClick={() => this.handleOperate('create')}>新增下行</Button>\n                    <Button type='primary' icon='edit' onClick={() => this.handleOperate('edit')}>编辑下行</Button>\n                    <Button type='primary'  icon='delete' onClick={() => this.handleOperate('delete')}>删除下行</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        scroll={{ y: 240 }}\n                        columns={columns}\n                        rowSelection={rowSelection}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                    />\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={()=>{\n                        this.dsForm.props.form.resetFields();\n                        this.setState({\n                            isVisible:false\n                        })\n                    }}\n                    width={600}\n                >\n                    <DSForm type={this.state.type}  dsInfo={this.state.dsInfo} wrappedComponentRef={(inst)=>{this.dsForm = inst;}}/>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\nclass DSForm extends React.Component{\n\n    render(){\n        let type = this.props.type;\n        let dsInfo = this.props.dsInfo || {};\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"商户号\" {...formItemLayout}>\n                    {\n                        type == 'detail'?dsInfo.merchantNo:\n                        getFieldDecorator('merchantNo',{\n                            initialValue:dsInfo.merchantNo,\n                            rules: [{ required: true, message: '请输入商户号!' },{\n                                    min:5,max :10,message:\"商户号长度不符合[5-10位]!\"\n                            }]\n                        })(\n                            <Input  type=\"text\" placeholder=\"请输入商户号\"/> \n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户名称\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? dsInfo.merchantName :\n                        getFieldDecorator('merchantName',{\n                            initialValue: dsInfo.merchantName,\n                            rules: [{ required: true, message: '请输入商户名称!' }]\n                        })(\n                            <Input  type=\"text\" placeholder=\"请输入商户名称\"/> \n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户密码\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? dsInfo.merchantPwd:\n                        getFieldDecorator('merchantPwd',{\n                            initialValue: dsInfo.merchantPwd,\n                            rules: [{ required: true, message: '请输入商户密码!' },{\n                                min:5,max :10,message:\"商户密码长度不符合[5-10位]!\"\n                        }]\n                        })(\n                            <Input  type=\"text\" placeholder=\"请输入商户密码\"/> \n                        )\n                    }\n                </FormItem>\n            </Form> \n        );\n    }\n}\nDSForm = Form.create({})(DSForm);"]},"metadata":{},"sourceType":"module"}