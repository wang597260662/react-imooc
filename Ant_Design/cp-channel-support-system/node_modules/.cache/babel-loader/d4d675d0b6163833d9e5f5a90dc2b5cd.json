{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/dsmanage/indes.js\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport FormItem from 'antd/lib/form/FormItem';\nimport BaseForm from './../../components/BaseForm/';\nimport axios from '../../axios';\nimport TextArea from 'antd/lib/input/TextArea';\nimport Utils from './../../utils/utils';\nvar Option = _Select.Option;\n\nvar DsManage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DsManage, _Component);\n\n  function DsManage() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, DsManage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DsManage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1,\n      pageSize: 20\n    };\n\n    _this2.handleOperate = function (type) {\n      var items = _this2.state.selectedRows;\n\n      if (type) {\n        if (type == 'edit') {\n          if (!items || items.length == 0) {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个下行'\n            });\n\n            return;\n          }\n\n          if (items.length > 1) {\n            _Modal.info({\n              title: \"提示\",\n              content: '只能选择一个下行编辑'\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '编辑下行',\n            dsInfo: items[0]\n          });\n        } else if (type == 'delete') {\n          if (items && items.length >= 1) {\n            //删除下行\n            var _this = _assertThisInitialized(_this2);\n\n            var ids = '';\n            items.map(function (item) {\n              ids += item.id + '-';\n            });\n\n            _Modal.confirm({\n              title: '确认删除',\n              content: '是否要删除选中项',\n              onOk: function onOk() {\n                axios.ajax({\n                  url: '/dsmanage/delete',\n                  data: {\n                    params: {\n                      ids: ids\n                    }\n                  }\n                }).then(function (res) {\n                  if (res.code == 0) {\n                    _this.setState({\n                      isVisible: false,\n                      selectedRowKeys: null\n                    });\n\n                    _message.success(\"删除成功!\");\n\n                    _this.requestList();\n                  } else {\n                    _message.success(\"删除失败!\");\n                  }\n                });\n              }\n            });\n          } else {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个商户'\n            });\n\n            return;\n          }\n        } else if (type == 'create') {\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '创建下行',\n            dsInfo: null\n          });\n        }\n      }\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params.businessName = params.businessName;\n      _this2.params.dsType = params.dsType;\n      _this2.params.dsPort = params.dsPort;\n      _this2.params.codeType = params.codeType;\n\n      _this2.requestList();\n    };\n\n    _this2.handleSubmit = function () {\n      var type = _this2.state.type;\n\n      _this2.dsForm.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = _this2.dsForm.props.form.getFieldsValue();\n\n          var info = type == 'create' ? '新增' : '编辑';\n          axios.ajax({\n            url: type == 'create' ? '/dsmanage/add' : '/dsmanage/edit',\n            data: {\n              params: data\n            }\n          }).then(function (res) {\n            if (res.code == 0) {\n              _this2.dsForm.props.form.resetFields();\n\n              _this2.setState({\n                isVisible: false,\n                selectedRowKeys: null\n              });\n\n              _message.success(info + \"成功!\");\n\n              _this2.requestList();\n            } else {\n              _message.error(info + \"失败! \" + res.msg);\n            }\n          });\n        }\n      });\n    };\n\n    _this2.getCodeType = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getcodetyelist', {}, true, 'codeTypeList');\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/dsmanage/getdslist', _this2.params, true);\n    };\n\n    return _this2;\n  }\n\n  _createClass(DsManage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n      this.getCodeType();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formList = [{\n        type: 'INPUT',\n        label: '业务名称',\n        field: 'businessName',\n        width: 200,\n        placeholder: '请输入业务名称'\n      }, {\n        type: 'SELECT',\n        label: '下行类型',\n        field: 'dsType',\n        width: 200,\n        list: [{\n          key: '1',\n          value: '二次确认'\n        }, {\n          key: '2',\n          value: '验证码'\n        }, {\n          key: '3',\n          value: '订购成功下行'\n        }]\n      }, {\n        type: 'INPUT',\n        label: '端口号',\n        field: 'dsPort',\n        width: 200,\n        placeholder: '请输入端口号'\n      }]; //设置列名\n\n      var columns = [{\n        title: 'Id',\n        dataIndex: 'id',\n        width: 10\n      }, {\n        title: 'codeType',\n        dataIndex: 'codeType',\n        width: 20\n      }, {\n        title: '业务名称',\n        dataIndex: 'businessName',\n        width: 80\n      }, {\n        title: '下行类型',\n        dataIndex: 'dsType',\n        width: 80,\n        render: function render(dsType) {\n          return {\n            '1': '二次确认',\n            '2': '验证码',\n            '3': '订购成功下行'\n          }[dsType];\n        }\n      }, {\n        title: '端口号',\n        dataIndex: 'dsPort',\n        width: 80\n      }, {\n        title: '内容',\n        dataIndex: 'dsContent',\n        width: 250\n      }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        width: 100\n      }, {\n        title: '更新时间',\n        dataIndex: 'updateTime',\n        width: 100\n      }];\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        type: 'checkbox',\n        selectedRowKeys: selectedRowKeys,\n        columnWidth: 5,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), React.createElement(_Card, {\n        className: \"operate-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: function onClick() {\n          return _this3.handleOperate('create');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"\\u521B\\u5EFA\\u4E0B\\u884C\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"edit\",\n        onClick: function onClick() {\n          return _this3.handleOperate('edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\\u4E0B\\u884C\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          return _this3.handleOperate('delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"\\u5220\\u9664\\u4E0B\\u884C\")), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        bordered: true,\n        size: \"small\",\n        columns: columns,\n        rowSelection: rowSelection,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: this.state.title,\n        visible: this.state.isVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel() {\n          _this3.dsForm.props.form.resetFields();\n\n          _this3.setState({\n            isVisible: false\n          });\n        },\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(DSForm, {\n        type: this.state.type,\n        dsInfo: this.state.dsInfo,\n        codeTypeList: this.state.codeType,\n        wrappedComponentRef: function wrappedComponentRef(inst) {\n          _this3.dsForm = inst;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DsManage;\n}(Component);\n\nexport { DsManage as default };\n\nvar DSForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DSForm, _React$Component);\n\n  function DSForm() {\n    _classCallCheck(this, DSForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DSForm).apply(this, arguments));\n  }\n\n  _createClass(DSForm, [{\n    key: \"render\",\n    value: function render() {\n      var codeTypeList = this.props.codeTypeList;\n      console.info(codeTypeList);\n      var codeTypeOptions = [];\n      var type = this.props.type;\n      var dsInfo = this.props.dsInfo || {};\n      codeTypeList.map(function (ct) {\n        codeTypeOptions.push(React.createElement(Option, {\n          value: ct.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, ct.value));\n      });\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      };\n      return React.createElement(_Form, {\n        layout: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"codeType\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.codeType : getFieldDecorator('codeType', {\n        initialValue: dsInfo.codeType,\n        rules: [{\n          required: true,\n          message: '请选择一个codeType'\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, Utils.getOptionList(codeTypeList)))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4E0B\\u884C\\u7C7B\\u578B\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.dsType : getFieldDecorator('dsType', {\n        initialValue: dsInfo.dsType,\n        rules: [{\n          required: true,\n          message: '请选择一个下行类型!'\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"\\u4E8C\\u6B21\\u56DE\\u590D\"), React.createElement(Option, {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"\\u9A8C\\u8BC1\\u7801\"), React.createElement(Option, {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"\\u6210\\u529F\\u8BA2\\u8D2D\\u4E0B\\u884C\")))), React.createElement(FormItem, Object.assign({\n        label: \"\\u7AEF\\u53E3\\u53F7\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.dsPort : getFieldDecorator('dsPort', {\n        initialValue: dsInfo.dsPort,\n        rules: [{\n          required: true,\n          message: '请输入端口号!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7AEF\\u53E3\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4E0B\\u884C\\u5185\\u5BB9\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), type == 'detail' ? dsInfo.dsContent : getFieldDecorator('dsContent', {\n        initialValue: dsInfo.dsContent,\n        rules: [{\n          required: true,\n          message: '请输入内容!'\n        }]\n      })(React.createElement(TextArea, {\n        autosize: true,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5185\\u5BB9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DSForm;\n}(React.Component);\n\nDSForm = _Form.create({})(DSForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/dsmanage/indes.js"],"names":["React","Component","FormItem","BaseForm","axios","TextArea","Utils","Option","DsManage","state","list","isVisible","params","page","pageSize","handleOperate","type","items","selectedRows","length","info","title","content","setState","dsInfo","_this","ids","map","item","id","confirm","onOk","ajax","url","data","then","res","code","selectedRowKeys","success","requestList","handleFilter","businessName","dsType","dsPort","codeType","handleSubmit","dsForm","props","form","validateFields","err","values","getFieldsValue","resetFields","error","msg","getCodeType","requestSelect","formList","label","field","width","placeholder","key","value","columns","dataIndex","render","rowSelection","columnWidth","onChange","pagination","inst","DSForm","codeTypeList","console","codeTypeOptions","ct","push","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","initialValue","rules","required","message","getOptionList","dsContent","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.less'\nimport FormItem from 'antd/lib/form/FormItem';\nimport { Card, message, Form, Select, Input, Button, Table, Icon, Divider, Modal } from 'antd'\nimport BaseForm from './../../components/BaseForm/'\nimport axios from '../../axios'\nimport TextArea from 'antd/lib/input/TextArea';\nimport Utils from './../../utils/utils'\nconst Option = Select.Option;\nexport default class DsManage extends Component {\n\n    state = {\n        list: [],\n        isVisible: false\n    }\n    params = {\n        page: 1,\n        pageSize: 20\n    }\n\n\n\n    handleOperate = (type) => {\n        let items = this.state.selectedRows;\n        if (type) {\n            if (type == 'edit') {\n                if (!items || items.length == 0) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个下行'\n                    })\n                    return;\n                }\n                if (items.length > 1) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '只能选择一个下行编辑'\n                    })\n                    return;\n                }\n\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '编辑下行',\n                    dsInfo: items[0]\n                })\n\n            } else if (type == 'delete') {\n                if (items && items.length >= 1) {\n                    //删除下行\n                    let _this = this;\n                    let ids = '';\n                    items.map((item) => {\n                        ids += (item.id) + '-';\n                    })\n                    Modal.confirm({\n                        title: '确认删除',\n                        content: '是否要删除选中项',\n                        onOk() {\n                            axios.ajax({\n                                url: '/dsmanage/delete',\n                                data: {\n                                    params: {\n                                        ids: ids\n                                    }\n                                }\n                            }).then((res) => {\n                                if (res.code == 0) {\n                                    _this.setState({\n                                        isVisible: false,\n                                        selectedRowKeys: null\n                                    })\n                                    message.success(\"删除成功!\");\n                                    _this.requestList();\n\n                                } else {\n                                    message.success(\"删除失败!\");\n                                }\n\n                            })\n                        }\n\n                    })\n\n                } else {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个商户'\n                    })\n                    return;\n                }\n            } else if (type == 'create') {\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '创建下行',\n                    dsInfo: null\n                }\n                )\n            }\n        }\n\n    }\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params.businessName = params.businessName;\n        this.params.dsType = params.dsType;\n        this.params.dsPort = params.dsPort;\n        this.params.codeType = params.codeType;\n        this.requestList();\n    }\n\n    // 创建/编辑商户提交\n    handleSubmit = () => {\n        let type = this.state.type;\n        this.dsForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = this.dsForm.props.form.getFieldsValue();\n                let info = type == 'create' ? '新增' : '编辑';\n                axios.ajax({\n                    url: type == 'create' ? '/dsmanage/add' : '/dsmanage/edit',\n                    data: {\n                        params: data\n                    }\n                }).then((res) => {\n                    if (res.code == 0) {\n                        this.dsForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false,\n                            selectedRowKeys: null\n                        })\n                        message.success(info + \"成功!\");\n                        this.requestList();\n                    } else {\n                        message.error(info + \"失败! \" + res.msg);\n                    }\n                })\n            }\n        });\n\n    }\n\n    //获取codeType\n    getCodeType = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getcodetyelist', {}, true, 'codeTypeList');\n    }\n\n\n    componentDidMount() {\n        this.requestList();\n        this.getCodeType();\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/dsmanage/getdslist', this.params, true);\n    }\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '业务名称',\n                field: 'businessName',\n                width: 200,\n                placeholder: '请输入业务名称'\n            }, {\n                type: 'SELECT',\n                label: '下行类型',\n                field: 'dsType',\n                width: 200,\n                list: [ { key: '1', value: '二次确认' }, { key: '2', value: '验证码' }, { key: '3', value: '订购成功下行' }]\n            }\n            , {\n                type: 'INPUT',\n                label: '端口号',\n                field: 'dsPort',\n                width: 200,\n                placeholder: '请输入端口号'\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: 'Id',\n            dataIndex: 'id',\n            width: 10\n        }, {\n            title: 'codeType',\n            dataIndex: 'codeType',\n            width: 20\n        },\n        {\n            title: '业务名称',\n            dataIndex: 'businessName',\n            width: 80\n        }, {\n            title: '下行类型',\n            dataIndex: 'dsType',\n            width: 80,\n            render(dsType) {\n                return {\n                    '1': '二次确认',\n                    '2': '验证码',\n                    '3': '订购成功下行'\n                }[dsType]\n\n            }\n        }, {\n            title: '端口号',\n            dataIndex: 'dsPort',\n            width: 80\n        }\n            , {\n            title: '内容',\n            dataIndex: 'dsContent',\n            width: 250\n\n        }, {\n            title: '创建时间',\n            dataIndex: 'createTime',\n            width: 100\n        }, {\n            title: '更新时间',\n            dataIndex: 'updateTime',\n            width: 100\n        }\n\n        ];\n        const selectedRowKeys = this.state.selectedRowKeys;\n\n        const rowSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            columnWidth: 5,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n\n        return (\n            <div>\n                <Card >\n                    <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n                </Card>\n\n                <Card className='operate-wrap'>\n                    <Button type='primary' icon='plus' onClick={() => this.handleOperate('create')}>创建下行</Button>\n                    <Button type='primary' icon='edit' onClick={() => this.handleOperate('edit')}>编辑下行</Button>\n                    <Button type='primary' icon='delete' onClick={() => this.handleOperate('delete')}>删除下行</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        columns={columns}\n                        rowSelection={rowSelection}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                    />\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={() => {\n                        this.dsForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false\n                        })\n                    }}\n                    width={600}\n                >\n                    <DSForm type={this.state.type} dsInfo={this.state.dsInfo} codeTypeList={this.state.codeType} wrappedComponentRef={(inst) => { this.dsForm = inst; }} />\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\nclass DSForm extends React.Component {\n\n    render() {\n        let codeTypeList = this.props.codeTypeList;\n        console.info(codeTypeList);\n        let codeTypeOptions = [];\n        let type = this.props.type;\n        let dsInfo = this.props.dsInfo || {};\n        codeTypeList.map((ct) => {\n            codeTypeOptions.push(<Option value={ct.key}>{ct.value}</Option>);\n        })\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        }\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"codeType\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? dsInfo.codeType :\n                            getFieldDecorator('codeType', {\n                                initialValue: dsInfo.codeType,\n                                rules: [{ required: true, message: '请选择一个codeType' },]\n                            })(\n                                <Select>\n                                    {Utils.getOptionList(codeTypeList)}\n                                </Select>\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"下行类型\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? dsInfo.dsType :\n                            getFieldDecorator('dsType', {\n                                initialValue: dsInfo.dsType,\n                                rules: [{ required: true, message: '请选择一个下行类型!' }]\n                            })(\n                                <Select>\n                                    <Option value={1}>二次回复</Option>\n                                    <Option value={2}>验证码</Option>\n                                    <Option value={3}>成功订购下行</Option>\n                                </Select>\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"端口号\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? dsInfo.dsPort :\n                            getFieldDecorator('dsPort', {\n                                initialValue: dsInfo.dsPort,\n                                rules: [{ required: true, message: '请输入端口号!' },]\n                            })(\n                                <Input type=\"text\" placeholder=\"请输入端口号\" />\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"下行内容\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? dsInfo.dsContent :\n                            getFieldDecorator('dsContent', {\n                                initialValue: dsInfo.dsContent,\n                                rules: [{ required: true, message: '请输入内容!' },]\n                            })(\n                                <TextArea   autosize={true}  placeholder=\"请输入内容\" />\n                            )\n                    }\n                </FormItem>\n            </Form>\n        );\n    }\n}\nDSForm = Form.create({})(DSForm);"]},"metadata":{},"sourceType":"module"}