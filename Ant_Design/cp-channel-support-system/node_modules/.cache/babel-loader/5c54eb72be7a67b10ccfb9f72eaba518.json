{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelquery-admin/index.js\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport BaseForm from './../../components/BaseForm/';\nimport axios from '../../axios';\n\nvar AdminCpChannelQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminCpChannelQuery, _Component);\n\n  function AdminCpChannelQuery() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, AdminCpChannelQuery);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdminCpChannelQuery)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1,\n      pageSize: 20\n    };\n\n    _this2.handleChange = function (pagination, filters, sorter) {\n      console.info('Various parameters', pagination, filters, sorter);\n      _this2.params.filtered = filters;\n      _this2.params.sorted = sorter;\n\n      _this2.requestList();\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params.provider = params.provider;\n      _this2.params.merchantName = params.merchantName;\n      _this2.params.appId = params.appId;\n      _this2.params.businessName = params.businessName;\n      _this2.params.price = params.price;\n      _this2.params.shieldCity = params.shieldCity;\n      _this2.params.province = params.province;\n      _this2.params.volumeSwitch = params.volumeSwitch;\n\n      _this2.requestList();\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/admin/getCpChanelQueryList', _this2.params, true);\n    };\n\n    return _this2;\n  }\n\n  _createClass(AdminCpChannelQuery, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formList = [{\n        type: 'INPUT',\n        label: '商户名称',\n        field: 'merchantName',\n        width: 200,\n        placeholder: '请输入查询的商户名称'\n      }, {\n        type: 'SELECT',\n        label: '运营商',\n        field: 'provider',\n        placeholder: '请选择查询的运营商',\n        width: 200,\n        list: [{\n          key: 1,\n          value: '移动'\n        }, {\n          key: 2,\n          value: '联通'\n        }, {\n          key: 3,\n          value: '电信'\n        }]\n      }, {\n        type: 'INPUT',\n        label: 'AppId',\n        field: 'appId',\n        width: 200,\n        placeholder: '请输入查询的AppId'\n      }, {\n        type: 'INPUT',\n        label: '业务名称',\n        field: 'businessName',\n        width: 200,\n        placeholder: '请输入查询的业务名称'\n      }, {\n        type: 'INPUT',\n        label: '价格',\n        field: 'price',\n        width: 200,\n        placeholder: '请输入查询的价格'\n      }, {\n        type: 'INPUT',\n        label: '屏蔽地级市',\n        field: 'shieldCity',\n        width: 200,\n        placeholder: '请输入查询的屏蔽地级市'\n      }, {\n        type: 'INPUT',\n        label: '省份',\n        field: 'province',\n        width: 200,\n        placeholder: '请输入查询的省份'\n      }, {\n        type: 'SELECT',\n        label: '放量开关',\n        placeholder: '请选择查询的开关',\n        field: 'volumeSwitch',\n        width: 200,\n        list: [{\n          key: 1,\n          value: '开'\n        }, {\n          key: 0,\n          value: '关'\n        }]\n      }]; //设置列名\n\n      var columns = [{\n        title: '商户名称(商户号)',\n        dataIndex: 'merchantName',\n        width: 120,\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, record.merchantName, \"(\", record.merchantNo, \")\");\n        }\n      }, {\n        title: '运营商',\n        dataIndex: 'provider',\n        width: 80,\n        render: function render(provider) {\n          return {\n            '1': '移动',\n            '2': '联通',\n            '3': '电信'\n          }[provider];\n        }\n      }, {\n        title: '业务名称',\n        dataIndex: 'businessName',\n        width: 80\n      }, {\n        title: '价格(元)',\n        dataIndex: 'price',\n        width: 50,\n        sorted: true\n      }, {\n        title: '屏蔽地市',\n        dataIndex: 'shieldCity',\n        width: 50\n      }, {\n        title: '省份',\n        dataIndex: 'province',\n        width: 50\n      }, {\n        title: '放量时间',\n        dataIndex: 'volumeTime',\n        width: 50\n      }, {\n        title: '放量开关',\n        dataIndex: 'volumeSwitch',\n        width: 50,\n        render: function render(tag) {\n          var color = tag == '1' ? 'green' : 'red';\n          return React.createElement(_Tag, {\n            color: color,\n            key: tag,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, tag);\n        }\n      }, {\n        title: '开关更新时间',\n        dataIndex: 'switchUpdateTime',\n        width: 50,\n        sorted: true\n      }, {\n        title: '量级进度',\n        dataIndex: 'magnitudeSchedule',\n        width: 50,\n        sorted: true,\n        render: function render(tag) {\n          var color = tag >= 100 ? 'red' : 'green';\n          return React.createElement(\"span\", {\n            color: color,\n            key: tag,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, tag, \"%\");\n        }\n      }, {\n        title: '到量时间',\n        dataIndex: 'timeToVolume',\n        width: 50\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        bordered: true,\n        size: \"small\",\n        columns: columns,\n        onChange: this.handleChange,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AdminCpChannelQuery;\n}(Component);\n\nexport { AdminCpChannelQuery as default };","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelquery-admin/index.js"],"names":["React","Component","BaseForm","axios","AdminCpChannelQuery","state","list","isVisible","params","page","pageSize","handleChange","pagination","filters","sorter","console","info","filtered","sorted","requestList","handleFilter","provider","merchantName","appId","businessName","price","shieldCity","province","volumeSwitch","_this","formList","type","label","field","width","placeholder","key","value","columns","title","dataIndex","render","text","record","merchantNo","tag","color"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;IACqBC,mB;;;;;;;;;;;;;;;;;WACjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,SAAS,EAAE;AAFP,K;WAIRC,M,GAAS;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,QAAQ,EAAE;AAFL,K;;WAMTC,Y,GAAe,UAACC,UAAD,EAAaC,OAAb,EAAsBC,MAAtB,EAAiC;AAC5CC,MAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb,EAAmCJ,UAAnC,EAA+CC,OAA/C,EAAwDC,MAAxD;AAEA,aAAKN,MAAL,CAAYS,QAAZ,GAAuBJ,OAAvB;AACA,aAAKL,MAAL,CAAYU,MAAZ,GAAqBJ,MAArB;;AAEA,aAAKK,WAAL;AACH,K;;WAIDC,Y,GAAe,UAACZ,MAAD,EAAY;AACvB,aAAKA,MAAL,CAAYa,QAAZ,GAAuBb,MAAM,CAACa,QAA9B;AACA,aAAKb,MAAL,CAAYc,YAAZ,GAA2Bd,MAAM,CAACc,YAAlC;AACA,aAAKd,MAAL,CAAYe,KAAZ,GAAoBf,MAAM,CAACe,KAA3B;AACA,aAAKf,MAAL,CAAYgB,YAAZ,GAA2BhB,MAAM,CAACgB,YAAlC;AACA,aAAKhB,MAAL,CAAYiB,KAAZ,GAAoBjB,MAAM,CAACiB,KAA3B;AACA,aAAKjB,MAAL,CAAYkB,UAAZ,GAAyBlB,MAAM,CAACkB,UAAhC;AACA,aAAKlB,MAAL,CAAYmB,QAAZ,GAAuBnB,MAAM,CAACmB,QAA9B;AACA,aAAKnB,MAAL,CAAYoB,YAAZ,GAA2BpB,MAAM,CAACoB,YAAlC;;AACA,aAAKT,WAAL;AACH,K;;WASDA,W,GAAc,YAAM;AAChB,UAAIU,KAAK,iCAAT;;AACA1B,MAAAA,KAAK,CAACgB,WAAN,CAAkBU,KAAlB,EAAyB,6BAAzB,EAAwD,OAAKrB,MAA7D,EAAqE,IAArE;AACH,K;;;;;;;wCAPmB;AAChB,WAAKW,WAAL;AACH;;;6BAOQ;AACL,UAAMW,QAAQ,GAAG,CACb;AACIC,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,KAAK,EAAE,MAFX;AAGIC,QAAAA,KAAK,EAAE,cAHX;AAIIC,QAAAA,KAAK,EAAE,GAJX;AAKIC,QAAAA,WAAW,EAAE;AALjB,OADa,EAOV;AACCJ,QAAAA,IAAI,EAAE,QADP;AAECC,QAAAA,KAAK,EAAE,KAFR;AAGCC,QAAAA,KAAK,EAAE,UAHR;AAICE,QAAAA,WAAW,EAAE,WAJd;AAKCD,QAAAA,KAAK,EAAE,GALR;AAMC5B,QAAAA,IAAI,EAAE,CAAC;AAAE8B,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SAAD,EAA0B;AAAED,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SAA1B,EAAmD;AAAED,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SAAnD;AANP,OAPU,EAcV;AACCN,QAAAA,IAAI,EAAE,OADP;AAECC,QAAAA,KAAK,EAAE,OAFR;AAGCC,QAAAA,KAAK,EAAE,OAHR;AAICC,QAAAA,KAAK,EAAE,GAJR;AAKCC,QAAAA,WAAW,EAAE;AALd,OAdU,EAoBV;AACCJ,QAAAA,IAAI,EAAE,OADP;AAECC,QAAAA,KAAK,EAAE,MAFR;AAGCC,QAAAA,KAAK,EAAE,cAHR;AAICC,QAAAA,KAAK,EAAE,GAJR;AAKCC,QAAAA,WAAW,EAAE;AALd,OApBU,EA2BX;AACEJ,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE,IAFT;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,KAAK,EAAE,GAJT;AAKEC,QAAAA,WAAW,EAAE;AALf,OA3BW,EAkCX;AACEJ,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,KAAK,EAAE,YAHT;AAIEC,QAAAA,KAAK,EAAE,GAJT;AAKEC,QAAAA,WAAW,EAAE;AALf,OAlCW,EAyCX;AACEJ,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE,IAFT;AAGEC,QAAAA,KAAK,EAAE,UAHT;AAIEC,QAAAA,KAAK,EAAE,GAJT;AAKEC,QAAAA,WAAW,EAAE;AALf,OAzCW,EAgDX;AACEJ,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEG,QAAAA,WAAW,EAAE,UAHf;AAIEF,QAAAA,KAAK,EAAE,cAJT;AAKEC,QAAAA,KAAK,EAAE,GALT;AAME5B,QAAAA,IAAI,EAAE,CAAC;AAAE8B,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SAAD,EAAyB;AAAED,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SAAzB;AANR,OAhDW,CAAjB,CADK,CA2DL;;AACA,UAAMC,OAAO,GAAG,CAAC;AACbC,QAAAA,KAAK,EAAE,WADM;AAEbC,QAAAA,SAAS,EAAE,cAFE;AAGbN,QAAAA,KAAK,EAAE,GAHM;AAIbO,QAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP;AAAA,iBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKA,MAAM,CAACrB,YADZ,OAC2BqB,MAAM,CAACC,UADlC,MADI;AAAA;AAJK,OAAD,EAUb;AACCL,QAAAA,KAAK,EAAE,KADR;AAECC,QAAAA,SAAS,EAAE,UAFZ;AAGCN,QAAAA,KAAK,EAAE,EAHR;AAICO,QAAAA,MAJD,kBAIQpB,QAJR,EAIkB;AACb,iBAAO;AACH,iBAAK,IADF;AAEH,iBAAK,IAFF;AAGH,iBAAK;AAHF,YAILA,QAJK,CAAP;AAMH;AAXF,OAVa,EAsBb;AACCkB,QAAAA,KAAK,EAAE,MADR;AAECC,QAAAA,SAAS,EAAE,cAFZ;AAGCN,QAAAA,KAAK,EAAE;AAHR,OAtBa,EA0Bb;AACCK,QAAAA,KAAK,EAAE,OADR;AAECC,QAAAA,SAAS,EAAE,OAFZ;AAGCN,QAAAA,KAAK,EAAE,EAHR;AAIChB,QAAAA,MAAM,EAAE;AAJT,OA1Ba,EA+Bb;AACCqB,QAAAA,KAAK,EAAE,MADR;AAECC,QAAAA,SAAS,EAAE,YAFZ;AAGCN,QAAAA,KAAK,EAAE;AAHR,OA/Ba,EAmCb;AACCK,QAAAA,KAAK,EAAE,IADR;AAECC,QAAAA,SAAS,EAAE,UAFZ;AAGCN,QAAAA,KAAK,EAAE;AAHR,OAnCa,EAuCb;AACCK,QAAAA,KAAK,EAAE,MADR;AAECC,QAAAA,SAAS,EAAE,YAFZ;AAGCN,QAAAA,KAAK,EAAE;AAHR,OAvCa,EA2Cb;AACCK,QAAAA,KAAK,EAAE,MADR;AAECC,QAAAA,SAAS,EAAE,cAFZ;AAGCN,QAAAA,KAAK,EAAE,EAHR;AAKCO,QAAAA,MAAM,EAAE,gBAAAI,GAAG,EAAI;AACX,cAAIC,KAAK,GAAGD,GAAG,IAAI,GAAP,GAAa,OAAb,GAAuB,KAAnC;AACA,iBAAO;AAAK,YAAA,KAAK,EAAEC,KAAZ;AAAmB,YAAA,GAAG,EAAED,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BA,GAA9B,CAAP;AACH;AARF,OA3Ca,EAoDb;AACCN,QAAAA,KAAK,EAAE,QADR;AAECC,QAAAA,SAAS,EAAE,kBAFZ;AAGCN,QAAAA,KAAK,EAAE,EAHR;AAIChB,QAAAA,MAAM,EAAE;AAJT,OApDa,EA0DV;AACFqB,QAAAA,KAAK,EAAE,MADL;AAEFC,QAAAA,SAAS,EAAE,mBAFT;AAGFN,QAAAA,KAAK,EAAE,EAHL;AAIFhB,QAAAA,MAAM,EAAE,IAJN;AAKFuB,QAAAA,MAAM,EAAE,gBAAAI,GAAG,EAAI;AACX,cAAIC,KAAK,GAAGD,GAAG,IAAI,GAAP,GAAa,KAAb,GAAqB,OAAjC;AACA,iBAAO;AAAM,YAAA,KAAK,EAAEC,KAAb;AAAoB,YAAA,GAAG,EAAED,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BA,GAA/B,MAAP;AACH;AARC,OA1DU,EAmEb;AACCN,QAAAA,KAAK,EAAE,MADR;AAECC,QAAAA,SAAS,EAAE,cAFZ;AAGCN,QAAAA,KAAK,EAAE;AAHR,OAnEa,CAAhB;AA6EA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEJ,QAApB;AAA8B,QAAA,YAAY,EAAE,KAAKV,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,OAAO,EAAEkB,OAHb;AAII,QAAA,QAAQ,EAAE,KAAK3B,YAJnB;AAKI,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,UAL3B;AAMI,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,IAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CADJ;AAmBH;;;;EA1M4CL,S;;SAA5BG,mB","sourcesContent":["import React, { Component } from 'react'\nimport './index.less'\nimport { Card, message, Form, Input, Button, Table, Icon, Divider, Modal, Tag } from 'antd'\nimport BaseForm from './../../components/BaseForm/'\nimport axios from '../../axios'\nexport default class AdminCpChannelQuery extends Component {\n    state = {\n        list: [],\n        isVisible: false\n    }\n    params = {\n        page: 1,\n        pageSize: 20\n    }\n\n\n    handleChange = (pagination, filters, sorter) => {\n        console.info('Various parameters', pagination, filters, sorter);\n\n        this.params.filtered = filters;\n        this.params.sorted = sorter;\n\n        this.requestList();\n    }\n\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params.provider = params.provider;\n        this.params.merchantName = params.merchantName;\n        this.params.appId = params.appId;\n        this.params.businessName = params.businessName;\n        this.params.price = params.price;\n        this.params.shieldCity = params.shieldCity;\n        this.params.province = params.province;\n        this.params.volumeSwitch = params.volumeSwitch;\n        this.requestList();\n    }\n\n\n\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/admin/getCpChanelQueryList', this.params, true);\n    }\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '商户名称',\n                field: 'merchantName',\n                width: 200,\n                placeholder: '请输入查询的商户名称'\n            }, {\n                type: 'SELECT',\n                label: '运营商',\n                field: 'provider',\n                placeholder: '请选择查询的运营商',\n                width: 200,\n                list: [{ key: 1, value: '移动' }, { key: 2, value: '联通' }, { key: 3, value: '电信' }]\n            }, {\n                type: 'INPUT',\n                label: 'AppId',\n                field: 'appId',\n                width: 200,\n                placeholder: '请输入查询的AppId'\n            }, {\n                type: 'INPUT',\n                label: '业务名称',\n                field: 'businessName',\n                width: 200,\n                placeholder: '请输入查询的业务名称'\n            }\n            , {\n                type: 'INPUT',\n                label: '价格',\n                field: 'price',\n                width: 200,\n                placeholder: '请输入查询的价格'\n            }\n            , {\n                type: 'INPUT',\n                label: '屏蔽地级市',\n                field: 'shieldCity',\n                width: 200,\n                placeholder: '请输入查询的屏蔽地级市'\n            }\n            , {\n                type: 'INPUT',\n                label: '省份',\n                field: 'province',\n                width: 200,\n                placeholder: '请输入查询的省份'\n            }\n            , {\n                type: 'SELECT',\n                label: '放量开关',\n                placeholder: '请选择查询的开关',\n                field: 'volumeSwitch',\n                width: 200,\n                list: [{ key: 1, value: '开' }, { key: 0, value: '关' }]\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: '商户名称(商户号)',\n            dataIndex: 'merchantName',\n            width: 120,\n            render: (text, record) => (\n                <span>\n                    {record.merchantName}({record.merchantNo})\n                </span>\n\n            )\n        }, {\n            title: '运营商',\n            dataIndex: 'provider',\n            width: 80,\n            render(provider) {\n                return {\n                    '1': '移动',\n                    '2': '联通',\n                    '3': '电信'\n                }[provider]\n\n            }\n        }, {\n            title: '业务名称',\n            dataIndex: 'businessName',\n            width: 80\n        }, {\n            title: '价格(元)',\n            dataIndex: 'price',\n            width: 50,\n            sorted: true\n        }, {\n            title: '屏蔽地市',\n            dataIndex: 'shieldCity',\n            width: 50\n        }, {\n            title: '省份',\n            dataIndex: 'province',\n            width: 50\n        }, {\n            title: '放量时间',\n            dataIndex: 'volumeTime',\n            width: 50\n        }, {\n            title: '放量开关',\n            dataIndex: 'volumeSwitch',\n            width: 50,\n\n            render: tag => {\n                let color = tag == '1' ? 'green' : 'red';\n                return <Tag color={color} key={tag}>{tag}</Tag>;\n            }\n        }, {\n            title: '开关更新时间',\n            dataIndex: 'switchUpdateTime',\n            width: 50,\n            sorted: true\n        }\n            , {\n            title: '量级进度',\n            dataIndex: 'magnitudeSchedule',\n            width: 50,\n            sorted: true,\n            render: tag => {\n                let color = tag >= 100 ? 'red' : 'green';\n                return <span color={color} key={tag}>{tag}%</span>;\n            }\n        }, {\n            title: '到量时间',\n            dataIndex: 'timeToVolume',\n            width: 50\n\n        }\n\n        ];\n\n\n        return (\n            <div>\n                <Card >\n                    <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n                </Card>\n\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        columns={columns}\n                        onChange={this.handleChange}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                    />\n                </div>\n\n            </div>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}