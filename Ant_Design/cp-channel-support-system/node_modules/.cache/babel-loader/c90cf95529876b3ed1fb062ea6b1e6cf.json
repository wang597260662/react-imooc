{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpmanage/index.js\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport FormItem from 'antd/lib/form/FormItem';\nimport BaseForm from './../../components/BaseForm/';\nimport axios from '../../axios';\n\nvar CpManage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CpManage, _Component);\n\n  function CpManage() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, CpManage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CpManage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1,\n      pageSize: 20\n    };\n\n    _this2.handleOperate = function (type) {\n      var items = _this2.state.selectedRows;\n\n      if (type) {\n        if (type == 'edit') {\n          if (!items || items.length == 0) {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个商户'\n            });\n\n            return;\n          }\n\n          if (items.length > 1) {\n            _Modal.info({\n              title: \"提示\",\n              content: '只能选择一个商户编辑'\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '编辑商户',\n            merchantInfo: items[0]\n          }); //显示编辑页面\n\n        } else if (type == 'delete') {\n          if (items && items.length >= 1) {\n            //删除用户\n            var _this = _assertThisInitialized(_this2);\n\n            var ids = [];\n            items.map(function (item) {\n              ids.push(item.id);\n            });\n\n            _Modal.confirm({\n              title: '确认删除',\n              content: '是否要删除选中项',\n              onOk: function onOk() {\n                axios.ajax_post({\n                  url: '/cpMerchant/deleteCpMerchantInfos',\n                  data: {\n                    params: {\n                      ids: ids\n                    }\n                  }\n                }).then(function (res) {\n                  if (res.code == 0) {\n                    _this.setState({\n                      isVisible: false,\n                      selectedRowKeys: [],\n                      selectedRows: []\n                    });\n\n                    _message.success(\"删除成功!\");\n\n                    _this.requestList();\n                  } else {\n                    _message.success(\"删除失败!\");\n                  }\n                });\n              }\n            });\n          } else {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个商户'\n            });\n\n            return;\n          }\n        } else if (type == 'create') {\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '创建商户',\n            merchantInfo: null\n          });\n        }\n      }\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params.merchantNo = params.merchantNo;\n      _this2.params.merchantName = params.merchantName;\n\n      _this2.requestList();\n    };\n\n    _this2.handleSubmit = function () {\n      var type = _this2.state.type;\n\n      _this2.merchantForm.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = _this2.merchantForm.props.form.getFieldsValue();\n\n          var info = type == 'create' ? '新增' : '编辑';\n          axios.ajax_post({\n            url: type == 'create' ? '/cpMerchant/addCpMerchantInfo' : '/cpMerchant/editCpMerchantInfo',\n            data: {\n              params: data\n            }\n          }).then(function (res) {\n            if (res.code == 0) {\n              _this2.merchantForm.props.form.resetFields();\n\n              _this2.setState({\n                isVisible: false,\n                selectedRowKeys: [],\n                selectedRows: []\n              });\n\n              _message.success(info + \"成功!\");\n\n              _this2.requestList();\n            } else {\n              _message.error(info + \"失败! \" + res.msg);\n            }\n          });\n        }\n      });\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/cpMerchant/getCpMerchantInfoList', _this2.params, true);\n    };\n\n    return _this2;\n  }\n\n  _createClass(CpManage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formList = [{\n        type: 'INPUT',\n        label: '商户号',\n        field: 'merchantNo',\n        width: 200,\n        placeholder: '请输入查询的商户号'\n      }, {\n        type: 'INPUT',\n        label: '商户名称',\n        field: 'merchantName',\n        width: 200,\n        placeholder: '请输入查询的商户名称'\n      }]; //设置列名\n\n      var columns = [{\n        title: '商户号',\n        dataIndex: 'merchantNo',\n        width: 80\n      }, {\n        title: '商户名称',\n        dataIndex: 'merchantName',\n        width: 120\n      }, {\n        title: '密码',\n        dataIndex: 'merchantPwd',\n        width: 80\n      }];\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        type: 'checkbox',\n        selectedRowKeys: selectedRowKeys,\n        columnWidth: 5,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(_Card, {\n        className: \"operate-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: function onClick() {\n          return _this3.handleOperate('create');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u5546\\u6237\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"edit\",\n        onClick: function onClick() {\n          return _this3.handleOperate('edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\\u5546\\u6237\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          return _this3.handleOperate('delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u5220\\u9664\\u5546\\u6237\")), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        bordered: true,\n        size: \"small\",\n        columns: columns,\n        rowSelection: rowSelection,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: this.state.title,\n        visible: this.state.isVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel() {\n          _this3.merchantForm.props.form.resetFields();\n\n          _this3.setState({\n            isVisible: false\n          });\n        },\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(MerchantForm, {\n        type: this.state.type,\n        merchantInfo: this.state.merchantInfo,\n        wrappedComponentRef: function wrappedComponentRef(inst) {\n          _this3.merchantForm = inst;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CpManage;\n}(Component);\n\nexport { CpManage as default };\n\nvar MerchantForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MerchantForm, _React$Component);\n\n  function MerchantForm() {\n    _classCallCheck(this, MerchantForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MerchantForm).apply(this, arguments));\n  }\n\n  _createClass(MerchantForm, [{\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n      var merchantInfo = this.props.merchantInfo || {};\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      };\n      return React.createElement(_Form, {\n        layout: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, getFieldDecorator('id', {\n        initialValue: merchantInfo.id\n      })(React.createElement(_Input, {\n        hidden: true,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u53F7\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), getFieldDecorator('merchantNo', {\n        initialValue: merchantInfo.merchantNo,\n        rules: [{\n          required: true,\n          message: '请输入商户号!'\n        }, {\n          min: 5,\n          max: 10,\n          message: \"商户号长度不符合[5-10位]!\"\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u540D\\u79F0\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), getFieldDecorator('merchantName', {\n        initialValue: merchantInfo.merchantName,\n        rules: [{\n          required: true,\n          message: '请输入商户名称!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u5BC6\\u7801\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), getFieldDecorator('merchantPwd', {\n        initialValue: merchantInfo.merchantPwd,\n        rules: [{\n          required: true,\n          message: '请输入商户密码!'\n        }, {\n          min: 5,\n          max: 10,\n          message: \"商户密码长度不符合[5-10位]!\"\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MerchantForm;\n}(React.Component);\n\nMerchantForm = _Form.create({})(MerchantForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpmanage/index.js"],"names":["React","Component","FormItem","BaseForm","axios","CpManage","state","list","isVisible","params","page","pageSize","handleOperate","type","items","selectedRows","length","info","title","content","setState","merchantInfo","_this","ids","map","item","push","id","confirm","onOk","ajax_post","url","data","then","res","code","selectedRowKeys","success","requestList","handleFilter","merchantNo","merchantName","handleSubmit","merchantForm","props","form","validateFields","err","values","getFieldsValue","resetFields","error","msg","formList","label","field","width","placeholder","columns","dataIndex","rowSelection","columnWidth","onChange","pagination","inst","MerchantForm","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","initialValue","rules","required","message","min","max","merchantPwd","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.less'\nimport FormItem from 'antd/lib/form/FormItem';\nimport { Card, message, Form, Input, Button, Table, Icon, Divider, Modal } from 'antd'\nimport BaseForm from './../../components/BaseForm/'\nimport axios from '../../axios'\nexport default class CpManage extends Component {\n\n    state = {\n        list: [],\n        isVisible: false\n    }\n    params = {\n        page: 1,\n        pageSize: 20\n    }\n\n    handleOperate = (type) => {\n        let items = this.state.selectedRows;\n        if (type) {\n            if (type == 'edit') {\n                if (!items || items.length == 0) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个商户'\n                    })\n                    return;\n                }\n                if (items.length > 1) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '只能选择一个商户编辑'\n                    })\n                    return;\n                }\n\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '编辑商户',\n                    merchantInfo: items[0]\n                })\n\n\n                //显示编辑页面\n            } else if (type == 'delete') {\n                if (items && items.length >= 1) {\n                    //删除用户\n                    let _this = this;\n                    let ids = [];\n                    items.map((item) => {\n                        ids.push(item.id);\n                    })\n                    Modal.confirm({\n                        title: '确认删除',\n                        content: '是否要删除选中项',\n                        onOk() {\n                            axios.ajax_post({\n                                url: '/cpMerchant/deleteCpMerchantInfos',\n                                data: {\n                                    params: {\n                                        ids: ids\n                                    }\n                                }\n                            }).then((res) => {\n                                if (res.code == 0) {\n                                    _this.setState({\n                                        isVisible: false,\n                                        selectedRowKeys: [],\n                                        selectedRows: []\n                                    })\n                                    message.success(\"删除成功!\");\n                                    _this.requestList();\n\n                                } else {\n                                    message.success(\"删除失败!\");\n                                }\n\n                            })\n                        }\n\n                    })\n\n                } else {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个商户'\n                    })\n                    return;\n                }\n            } else if (type == 'create') {\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '创建商户',\n                    merchantInfo: null\n                }\n                )\n            }\n        }\n\n\n    }\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params.merchantNo = params.merchantNo;\n        this.params.merchantName = params.merchantName;\n        this.requestList();\n    }\n\n    // 创建/编辑商户提交\n    handleSubmit = () => {\n        let type = this.state.type;\n        this.merchantForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = this.merchantForm.props.form.getFieldsValue();\n                let info = type == 'create' ? '新增' : '编辑';\n                axios.ajax_post({\n                    url: type == 'create' ? '/cpMerchant/addCpMerchantInfo' : '/cpMerchant/editCpMerchantInfo',\n                    data: {\n                        params: data\n                    }\n                }).then((res) => {\n                    if (res.code == 0) {\n                        this.merchantForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false,\n                            selectedRowKeys: [],\n                            selectedRows: []\n                        })\n                        message.success(info + \"成功!\");\n                        this.requestList();\n\n                    } else {\n                        message.error(info + \"失败! \" + res.msg);\n                    }\n                })\n            }\n        });\n\n    }\n\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/cpMerchant/getCpMerchantInfoList', this.params, true);\n    }\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '商户号',\n                field: 'merchantNo',\n                width: 200,\n                placeholder: '请输入查询的商户号'\n            }, {\n                type: 'INPUT',\n                label: '商户名称',\n                field: 'merchantName',\n                width: 200,\n                placeholder: '请输入查询的商户名称'\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: '商户号',\n            dataIndex: 'merchantNo',\n            width: 80\n        }, {\n            title: '商户名称',\n            dataIndex: 'merchantName',\n            width: 120\n        }, {\n            title: '密码',\n            dataIndex: 'merchantPwd',\n            width: 80\n        }];\n        const selectedRowKeys = this.state.selectedRowKeys;\n\n        const rowSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            columnWidth: 5,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n\n        return (\n            <div>\n                <Card >\n                    <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n                </Card>\n\n                <Card className='operate-wrap'>\n                    <Button type='primary' icon='plus' onClick={() => this.handleOperate('create')}>新增商户</Button>\n                    <Button type='primary' icon='edit' onClick={() => this.handleOperate('edit')}>编辑商户</Button>\n                    <Button type='primary' icon='delete' onClick={() => this.handleOperate('delete')}>删除商户</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        columns={columns}\n                        rowSelection={rowSelection}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                    />\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={() => {\n                        this.merchantForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false\n                        })\n                    }}\n                    width={600}\n\n                >\n                    <MerchantForm type={this.state.type} merchantInfo={this.state.merchantInfo} wrappedComponentRef={(inst) => { this.merchantForm = inst; }} />\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\nclass MerchantForm extends React.Component {\n\n\n\n    render() {\n        let type = this.props.type;\n        let merchantInfo = this.props.merchantInfo || {};\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        }\n        return (\n            <Form layout=\"horizontal\">\n\n                <FormItem >\n                    {\n                        getFieldDecorator('id', {\n                            initialValue: merchantInfo.id\n                        })(\n                            <Input hidden type=\"text\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户号\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('merchantNo', {\n                            initialValue: merchantInfo.merchantNo,\n                            rules: [{ required: true, message: '请输入商户号!' }, {\n                                min: 5, max: 10, message: \"商户号长度不符合[5-10位]!\"\n                            }]\n                        })(\n                            <Input type=\"text\" placeholder=\"请输入商户号\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户名称\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('merchantName', {\n                            initialValue: merchantInfo.merchantName,\n                            rules: [{ required: true, message: '请输入商户名称!' }]\n                        })(\n                            <Input type=\"text\" placeholder=\"请输入商户名称\" />\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户密码\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('merchantPwd', {\n                            initialValue: merchantInfo.merchantPwd,\n                            rules: [{ required: true, message: '请输入商户密码!' }, {\n                                min: 5, max: 10, message: \"商户密码长度不符合[5-10位]!\"\n                            }]\n                        })(\n                            <Input type=\"text\" placeholder=\"请输入商户密码\" />\n                        )\n                    }\n                </FormItem>\n            </Form>\n        );\n    }\n}\nMerchantForm = Form.create({})(MerchantForm);"]},"metadata":{},"sourceType":"module"}