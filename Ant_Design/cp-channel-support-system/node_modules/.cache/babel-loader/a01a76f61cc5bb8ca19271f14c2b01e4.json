{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelbind/index.js\";\nimport React, { Component } from 'react';\nimport BaseForm from './../../components/BaseForm/index';\nimport axios from './../../../src/axios/index';\nimport Utils from './../../utils/utils';\nvar Option = _Select.Option;\n\nvar CpChannelBind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CpChannelBind, _Component);\n\n  function CpChannelBind() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, CpChannelBind);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CpChannelBind)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1,\n      pageSize: 20\n    };\n\n    _this2.requestSelect = function () {\n      _this2.getCodeTypeList();\n    };\n\n    _this2.getCodeTypeList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getcodetyelist', {}, true, 'codeTypeList');\n    };\n\n    _this2.getMerchantList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getmerchantlist', {}, true, 'merchantList');\n    };\n\n    _this2.getAppIdList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestSelect(_this, '/common/getappidlist', {}, true, 'appIdList');\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/cpchannelbind/getcpchannelbindlist', _this2.params, true);\n    };\n\n    _this2.handleOperate = function (type) {\n      var items = _this2.state.selectedRows;\n\n      if (type) {\n        if (type == 'edit') {\n          if (!items || items.length == 0) {\n            Modal.info({\n              title: \"提示\",\n              content: '请选择一个CP绑定通道信息!'\n            });\n            return;\n          }\n\n          if (items.length > 1) {\n            Modal.info({\n              title: \"提示\",\n              content: '只能选择一个CP绑定通道信息编辑!'\n            });\n            return;\n          }\n\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '编辑CP绑定通道信息',\n            cpChannelBind: items[0]\n          }); //显示编辑页面\n\n        } else if (type == 'delete') {\n          if (items && items.length >= 1) {\n            var _this = _assertThisInitialized(_this2);\n\n            var ids = '';\n            items.map(function (item) {\n              ids += item.id + '-';\n            });\n            Modal.confirm({\n              title: '确认删除',\n              content: '是否要删除选中项',\n              onOk: function onOk() {\n                axios.ajax({\n                  url: '/cpchannelbind/delete',\n                  data: {\n                    params: {\n                      ids: ids\n                    }\n                  }\n                }).then(function (res) {\n                  if (res.code == 0) {\n                    _this.setState({\n                      isVisible: false,\n                      selectedRowKeys: null\n                    });\n\n                    message.success(\"删除成功!\");\n\n                    _this.requestList();\n                  } else {\n                    message.success(\"删除失败!\");\n                  }\n                });\n              }\n            });\n          } else {\n            Modal.info({\n              title: \"提示\",\n              content: '请选择一个CP通道绑定信息!'\n            });\n            return;\n          }\n        } else if (type == 'create') {\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '创建CP通道绑定',\n            merchantInfo: null\n          });\n        }\n      }\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params.merchantNo = params.merchantNo;\n      _this2.params.merchantName = params.merchantName;\n      _this2.params.codeType = params.codeType;\n      _this2.params.businessName = params.businessName;\n      _this2.params.realType = params.realType;\n\n      _this2.requestList();\n    };\n\n    _this2.handleSubmit = function () {\n      var type = _this2.state.type;\n\n      _this2.cpChannelBindForm.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = _this2.cpChannelBindForm.props.form.getFieldsValue();\n\n          var info = type == 'create' ? '新增' : '编辑';\n          axios.ajax({\n            url: type == 'create' ? '/cpchannelbind/add' : '/cpchannelbind/edit',\n            data: {\n              params: data\n            }\n          }).then(function (res) {\n            if (res.code == 0) {\n              _this2.cpChannelBindForm.props.form.resetFields();\n\n              _this2.setState({\n                isVisible: false,\n                selectedRowKeys: null\n              });\n\n              message.success(info + \"成功!\");\n\n              _this2.requestList();\n            } else {\n              message.error(info + \"失败! \" + res.msg);\n            }\n          });\n        }\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(CpChannelBind, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n      this.requestSelect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formList = [{\n        type: 'INPUT',\n        label: '商户号',\n        field: 'merchantNo',\n        width: 200,\n        placeholder: '请输入查询的商户号'\n      }, {\n        type: 'INPUT',\n        label: '商户名称',\n        field: 'merchantName',\n        width: 200,\n        placeholder: '请输入查询的商户名称'\n      }, {\n        type: 'INPUT',\n        label: 'codeType',\n        field: 'codeType',\n        width: 200,\n        placeholder: '请输入查询的codeType'\n      }, {\n        type: 'INPUT',\n        label: '业务名称',\n        field: 'businessName',\n        width: 200,\n        placeholder: '请输入查询的业务名称'\n      }, {\n        type: 'INPUT',\n        label: '真实类型',\n        field: 'realType',\n        width: 200,\n        placeholder: '请输入查询的真实类型'\n      }]; //设置列名\n\n      var columns = [{\n        title: 'Id',\n        dataIndex: 'id',\n        width: 80\n      }, {\n        title: '商户号',\n        dataIndex: 'merchantNo',\n        width: 80\n      }, {\n        title: '商户名称',\n        dataIndex: 'merchantName',\n        width: 120\n      }, {\n        title: 'appId',\n        dataIndex: 'appId',\n        width: 80\n      }, {\n        title: 'codeType',\n        dataIndex: 'codeType',\n        width: 80\n      }, {\n        title: 'businessName',\n        dataIndex: 'businessName',\n        width: 100\n      }, {\n        title: 'realType',\n        dataIndex: 'realType',\n        width: 100\n      }, {\n        title: 'realType',\n        dataIndex: 'realType',\n        width: 100\n      }, {\n        title: 'codeName',\n        dataIndex: 'codeName',\n        width: 0\n      }, {\n        title: 'codeProcess',\n        dataIndex: 'codeProcess',\n        width: 0\n      }]; //最前面的选择框\n\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        type: 'checkbox',\n        selectedRowKeys: selectedRowKeys,\n        columnWidth: 5,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \" \", React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })), React.createElement(Card, {\n        className: \"operate-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: function onClick() {\n          return _this3.handleOperate('create');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u7ED1\\u5B9A\"), React.createElement(Button, {\n        type: \"primary\",\n        icon: \"edit\",\n        onClick: function onClick() {\n          return _this3.handleOperate('edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\\u7ED1\\u5B9A\"), React.createElement(Button, {\n        type: \"primary\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          return _this3.handleOperate('delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"\\u5220\\u9664\\u7ED1\\u5B9A\")), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Table, {\n        bordered: true,\n        size: \"small\",\n        columns: columns,\n        rowSelection: rowSelection,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        title: this.state.title,\n        visible: this.state.isVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel() {\n          _this3.cpChannelBindForm.props.form.resetFields();\n\n          _this3.setState({\n            isVisible: false\n          });\n        },\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(CpChannelBindAddForm, {\n        type: this.state.type,\n        merchantList: this.state.merchantList,\n        appIdList: this.state.appIdList,\n        codeTypeList: this.state.codeTypeList //cpChannelBindInfo={this.state.cpChannelBindInfo}\n        ,\n        wrappedComponentRef: function wrappedComponentRef(inst) {\n          _this3.cpChannelBindAddForm = inst;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CpChannelBind;\n}(Component);\n\nexport { CpChannelBind as default };\n\nvar CpChannelBindAddForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CpChannelBindAddForm, _React$Component);\n\n  function CpChannelBindAddForm() {\n    _classCallCheck(this, CpChannelBindAddForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CpChannelBindAddForm).apply(this, arguments));\n  }\n\n  _createClass(CpChannelBindAddForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var id = 0;\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n      var formItemLayoutWithOutLabel = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 20,\n            offset: 4\n          }\n        }\n      };\n      var formItemLayout = {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      };\n\n      remove = function remove(k) {\n        var form = _this4.props.form;\n        var keys = form.getFieldValue('keys');\n\n        if (keys.length === 1) {\n          return;\n        }\n\n        form.setFieldsValue({\n          keys: keys.filter(function (key) {\n            return key !== k;\n          })\n        });\n      };\n\n      add = function add() {\n        var form = _this4.props.form;\n        var keys = form.getFieldValue('keys');\n        var nextKeys = keys.concat(id++);\n        form.setFieldsValue({\n          keys: nextKeys\n        });\n      };\n\n      var keys = getFieldValue('keys');\n      var dynamicFormItem = keys.map(function (k, index) {\n        React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(FormItem, Object.assign({\n          label: \"codeType\"\n        }, formItemLayout, {\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }), getFieldDecorator(\"codeTypes[\".concat(k, \"]\"), {\n          validateTrigger: ['onChange', 'onBlur'],\n          rules: [{\n            required: true,\n            message: \"请选择一个CodeType!\"\n          }]\n        })(React.createElement(_Select, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, Utils.getOptionList(_this4.props.codeTypeList)))), React.createElement(FormItem, Object.assign({\n          label: \"codeName\"\n        }, formItemLayout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }), getFieldDecorator(\"codeNames[\".concat(k, \"]\"), {\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: '请输入代码名称!'\n          }]\n        })(React.createElement(_Input, {\n          type: \"text\",\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EE3\\u7801\\u540D\\u79F0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }))), React.createElement(FormItem, Object.assign({\n          label: \"codeProcess\"\n        }, formItemLayout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }), getFieldDecorator(\"codeProcesss[\".concat(k, \"]\"), {\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: '请选择一个代码流程!'\n          }]\n        })(React.createElement(_Select, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }, React.createElement(_Input, {\n          type: \"text\",\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EE3\\u7801\\u6D41\\u7A0B\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        })))), keys.length > 1 ? React.createElement(Icon, {\n          className: \"dynamic-delete-button\",\n          type: \"minus-circle-o\",\n          disabled: keys.length === 1,\n          onClick: function onClick() {\n            return _this4.remove(k);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }) : null);\n      });\n      return React.createElement(Form, {\n        layout: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }), getFieldDecorator('merchantNo', {\n        rules: [{\n          required: true,\n          message: '请选择一个商户!'\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, Utils.getOptionList(this.props.merchantList)))), React.createElement(FormItem, Object.assign({\n        label: \"AppId\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }), getFieldDecorator('appId', {\n        rules: [{\n          required: true,\n          message: '请选择一个appId!'\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, Utils.getOptionList(this.props.appIdList)))), React.createElement(FormItem, Object.assign({}, formItemLayoutWithOutLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"dashed\",\n        onClick: this.add,\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), \" Add field\")), dynamicFormItem);\n    }\n  }]);\n\n  return CpChannelBindAddForm;\n}(React.Component);\n\nCpChannelBindForm = Form.create({})(CpChannelBindForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelbind/index.js"],"names":["React","Component","BaseForm","axios","Utils","Option","CpChannelBind","state","list","isVisible","params","page","pageSize","requestSelect","getCodeTypeList","_this","getMerchantList","getAppIdList","requestList","handleOperate","type","items","selectedRows","length","Modal","info","title","content","setState","cpChannelBind","ids","map","item","id","confirm","onOk","ajax","url","data","then","res","code","selectedRowKeys","message","success","merchantInfo","handleFilter","merchantNo","merchantName","codeType","businessName","realType","handleSubmit","cpChannelBindForm","props","form","validateFields","err","values","getFieldsValue","resetFields","error","msg","formList","label","field","width","placeholder","columns","dataIndex","rowSelection","columnWidth","onChange","pagination","merchantList","appIdList","codeTypeList","inst","cpChannelBindAddForm","CpChannelBindAddForm","getFieldDecorator","getFieldValue","formItemLayoutWithOutLabel","wrapperCol","xs","span","offset","sm","formItemLayout","labelCol","remove","k","keys","setFieldsValue","filter","key","add","nextKeys","concat","dynamicFormItem","index","validateTrigger","rules","required","getOptionList","whitespace","CpChannelBindForm","Form","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport BaseForm from './../../components/BaseForm/index'\nimport axios from './../../../src/axios/index'\nimport { Select, Input } from 'antd';\nimport Utils from './../../utils/utils'\nconst Option = Select.Option;\nexport default class CpChannelBind extends Component {\n\n\n    state = {\n        list: [],\n        isVisible: false\n    }\n\n    params = {\n        page: 1,\n        pageSize: 20\n    }\n\n    componentDidMount() {\n        this.requestList();\n        this.requestSelect();\n    }\n\n    requestSelect = () => {\n        this.getCodeTypeList();\n\n    }\n    //获取codeType信息\n    getCodeTypeList = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getcodetyelist', {}, true, 'codeTypeList');\n    }\n    //获取商户信息\n    getMerchantList = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getmerchantlist', {}, true, 'merchantList');\n    }\n    //获取AppidList\n    getAppIdList = () => {\n        let _this = this;\n        axios.requestSelect(_this, '/common/getappidlist', {}, true, 'appIdList');\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/cpchannelbind/getcpchannelbindlist', this.params, true);\n    }\n\n    handleOperate = (type) => {\n        let items = this.state.selectedRows;\n        if (type) {\n            if (type == 'edit') {\n                if (!items || items.length == 0) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个CP绑定通道信息!'\n                    })\n                    return;\n                }\n                if (items.length > 1) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '只能选择一个CP绑定通道信息编辑!'\n                    })\n                    return;\n                }\n\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '编辑CP绑定通道信息',\n                    cpChannelBind: items[0]\n                })\n\n\n                //显示编辑页面\n            } else if (type == 'delete') {\n                if (items && items.length >= 1) {\n                    let _this = this;\n                    let ids = '';\n                    items.map((item) => {\n                        ids += (item.id) + '-';\n                    })\n                    Modal.confirm({\n                        title: '确认删除',\n                        content: '是否要删除选中项',\n                        onOk() {\n                            axios.ajax({\n                                url: '/cpchannelbind/delete',\n                                data: {\n                                    params: {\n                                        ids: ids\n                                    }\n                                }\n                            }).then((res) => {\n                                if (res.code == 0) {\n                                    _this.setState({\n                                        isVisible: false,\n                                        selectedRowKeys: null\n                                    })\n                                    message.success(\"删除成功!\");\n                                    _this.requestList();\n\n                                } else {\n                                    message.success(\"删除失败!\");\n                                }\n\n                            })\n                        }\n\n                    })\n\n                } else {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个CP通道绑定信息!'\n                    })\n                    return;\n                }\n            } else if (type == 'create') {\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '创建CP通道绑定',\n                    merchantInfo: null\n                }\n                )\n            }\n        }\n\n    }\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params.merchantNo = params.merchantNo;\n        this.params.merchantName = params.merchantName;\n        this.params.codeType = params.codeType;\n        this.params.businessName = params.businessName;\n        this.params.realType = params.realType;\n        this.requestList();\n    }\n\n    // 创建/编辑cp绑定信息提交\n    handleSubmit = () => {\n        let type = this.state.type;\n        this.cpChannelBindForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = this.cpChannelBindForm.props.form.getFieldsValue();\n                let info = type == 'create' ? '新增' : '编辑';\n                axios.ajax({\n                    url: type == 'create' ? '/cpchannelbind/add' : '/cpchannelbind/edit',\n                    data: {\n                        params: data\n                    }\n                }).then((res) => {\n                    if (res.code == 0) {\n                        this.cpChannelBindForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false,\n                            selectedRowKeys: null\n                        })\n                        message.success(info + \"成功!\");\n                        this.requestList();\n\n                    } else {\n                        message.error(info + \"失败! \" + res.msg);\n                    }\n                })\n            }\n        });\n\n    }\n\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '商户号',\n                field: 'merchantNo',\n                width: 200,\n                placeholder: '请输入查询的商户号'\n            }, {\n                type: 'INPUT',\n                label: '商户名称',\n                field: 'merchantName',\n                width: 200,\n                placeholder: '请输入查询的商户名称'\n            }\n            , {\n                type: 'INPUT',\n                label: 'codeType',\n                field: 'codeType',\n                width: 200,\n                placeholder: '请输入查询的codeType'\n            }, {\n                type: 'INPUT',\n                label: '业务名称',\n                field: 'businessName',\n                width: 200,\n                placeholder: '请输入查询的业务名称'\n            }\n            , {\n                type: 'INPUT',\n                label: '真实类型',\n                field: 'realType',\n                width: 200,\n                placeholder: '请输入查询的真实类型'\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: 'Id',\n            dataIndex: 'id',\n            width: 80\n        }, {\n            title: '商户号',\n            dataIndex: 'merchantNo',\n            width: 80\n        }, {\n            title: '商户名称',\n            dataIndex: 'merchantName',\n            width: 120\n        }, {\n            title: 'appId',\n            dataIndex: 'appId',\n            width: 80\n        }, {\n            title: 'codeType',\n            dataIndex: 'codeType',\n            width: 80\n        }, {\n            title: 'businessName',\n            dataIndex: 'businessName',\n            width: 100\n        }, {\n            title: 'realType',\n            dataIndex: 'realType',\n            width: 100\n        }, {\n            title: 'realType',\n            dataIndex: 'realType',\n            width: 100\n        }, {\n            title: 'codeName',\n            dataIndex: 'codeName',\n            width: 0\n        }, {\n            title: 'codeProcess',\n            dataIndex: 'codeProcess',\n            width: 0\n        }\n    \n    ];\n        //最前面的选择框\n        const selectedRowKeys = this.state.selectedRowKeys;\n\n        const rowSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            columnWidth: 5,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n\n        return (\n            <div> <Card >\n                <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n            </Card>\n\n                <Card className='operate-wrap'>\n                    <Button type='primary' icon='plus' onClick={() => this.handleOperate('create')}>新增绑定</Button>\n                    <Button type='primary' icon='edit' onClick={() => this.handleOperate('edit')}>编辑绑定</Button>\n                    <Button type='primary' icon='delete' onClick={() => this.handleOperate('delete')}>删除绑定</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        columns={columns}\n                        rowSelection={rowSelection}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                    />\n\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={() => {\n                        this.cpChannelBindForm.props.form.resetFields();\n                        this.setState({\n                            isVisible: false\n                        })\n                    }}\n                    width={600}\n                />\n                <CpChannelBindAddForm type={this.state.type}\n                    merchantList={this.state.merchantList}\n                    appIdList={this.state.appIdList}\n                    codeTypeList={this.state.codeTypeList}\n                    //cpChannelBindInfo={this.state.cpChannelBindInfo}\n                    wrappedComponentRef={(inst) => { this.cpChannelBindAddForm = inst; }} />\n            </div>\n        );\n    }\n\n}\n\nclass CpChannelBindAddForm extends React.Component {\n\n    render() {\n        let id = 0;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        }\n        remove = (k) => {\n            const { form } = this.props;\n    \n            const keys = form.getFieldValue('keys');\n        \n            if (keys.length === 1) {\n              return;\n            }\n        \n            form.setFieldsValue({\n              keys: keys.filter(key => key !== k),\n            });\n          }\n        \n          add = () => {\n            const { form } = this.props;\n         \n            const keys = form.getFieldValue('keys');\n            const nextKeys = keys.concat(id++);\n           \n            form.setFieldsValue({\n              keys: nextKeys,\n            });\n          }\n        \n\n        const keys = getFieldValue('keys');\n        const dynamicFormItem = keys.map((k, index) => {\n\n            <Card>\n                <FormItem label=\"codeType\"  {...formItemLayout}\n                    key={k}\n                >\n                    {getFieldDecorator(`codeTypes[${k}]`, {\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [{\n                            required: true,\n\n                            message: \"请选择一个CodeType!\",\n                        }],\n                    })(\n                        <Select>\n                            {Utils.getOptionList(this.props.codeTypeList)}\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem label=\"codeName\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator(`codeNames[${k}]`, {\n                            rules: [{\n                                required: true,\n                                whitespace: true,\n                                message: '请输入代码名称!'\n                            }]\n                        })(\n                            <Input type='text' placeholder='请输入代码名称'></Input>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"codeProcess\"  {...formItemLayout}>\n                    {\n\n                        getFieldDecorator(`codeProcesss[${k}]`, {\n                            rules: [{\n                                required: true,\n                                whitespace: true,\n                                message: '请选择一个代码流程!'\n                            }]\n                        })(\n                            <Select>\n                                <Input type='text' placeholder='请输入代码流程'></Input>\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n                {\n                    keys.length > 1 ? (\n                        <Icon\n                            className=\"dynamic-delete-button\"\n                            type=\"minus-circle-o\"\n                            disabled={keys.length === 1}\n                            onClick={() => this.remove(k)}\n                        />\n                    ) : null\n                }\n            </Card>\n        })\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"商户\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('merchantNo', {\n                            rules: [{ required: true, message: '请选择一个商户!' }]\n                        })(\n                            <Select>\n                                {Utils.getOptionList(this.props.merchantList)}\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"AppId\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('appId', {\n\n                            rules: [{ required: true, message: '请选择一个appId!' }]\n                        })(\n                            <Select>\n                                {Utils.getOptionList(this.props.appIdList)}\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n\n                <FormItem {...formItemLayoutWithOutLabel}>\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n                        <Icon type=\"plus\" /> Add field\n                   </Button>\n                </FormItem>\n                {dynamicFormItem}\n            </Form>\n        );\n    }\n}\nCpChannelBindForm = Form.create({})(CpChannelBindForm);"]},"metadata":{},"sourceType":"module"}