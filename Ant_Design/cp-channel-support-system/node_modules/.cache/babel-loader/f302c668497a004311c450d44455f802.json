{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpmanage/index.js\";\nimport React, { Component } from 'react';\nimport './index.less';\nimport FormItem from 'antd/lib/form/FormItem';\nimport BaseForm from './../../components/BaseForm/';\nimport axios from '../../axios';\n\nvar CpManage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CpManage, _Component);\n\n  function CpManage() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, CpManage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CpManage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      list: [],\n      isVisible: false\n    };\n    _this2.params = {\n      page: 1\n    };\n\n    _this2.handleOperate = function (type) {\n      var items = _this2.state.selectedRows;\n\n      if (type) {\n        if (type == 'edit') {\n          if (!items) {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个商户'\n            });\n\n            return;\n          }\n\n          if (items.length > 1) {\n            _Modal.info({\n              title: \"提示\",\n              content: '只能选择一个商户编辑'\n            });\n\n            return;\n          }\n\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '编辑商户',\n            merchantInfo: items[0]\n          }); //显示编辑页面\n\n        } else if (type == 'delete') {\n          if (items && items.length >= 1) {\n            //删除用户\n            var _this = _assertThisInitialized(_this2);\n\n            var ids = '';\n            items.map(function (item) {\n              ids += item.id + '-';\n            });\n\n            _Modal.confirm({\n              title: '确认删除',\n              content: '是否要删除选中项',\n              onOk: function onOk() {\n                axios.ajax({\n                  url: '/cpmanage/delete',\n                  data: {\n                    params: {\n                      ids: ids\n                    }\n                  }\n                }).then(function (res) {\n                  if (res.code == 0) {\n                    _this.setState({\n                      isVisible: false\n                    });\n\n                    _message.success(\"删除成功!\");\n\n                    _this.requestList();\n                  } else {\n                    _message.success(\"删除失败!\");\n                  }\n                });\n              }\n            });\n          } else {\n            _Modal.info({\n              title: \"提示\",\n              content: '请选择一个商户'\n            });\n\n            return;\n          }\n        } else if (type == 'create') {\n          _this2.setState({\n            type: type,\n            isVisible: true,\n            title: '创建商户'\n          });\n        }\n      }\n    };\n\n    _this2.handleFilter = function (params) {\n      _this2.params = params;\n\n      _this2.requestList();\n    };\n\n    _this2.handleSubmit = function () {\n      var type = _this2.state.type;\n\n      _this2.merchantForm.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = _this2.merchantForm.props.form.getFieldsValue();\n\n          var info = type == 'create' ? '新增' : '编辑';\n          axios.ajax({\n            url: type == 'create' ? '/cpmanage/add' : '/cpmanage/edit',\n            data: {\n              params: data\n            }\n          }).then(function (res) {\n            if (res.code == 0) {\n              _this2.merchantForm.props.form.resetFields();\n\n              _this2.setState({\n                isVisible: false\n              });\n\n              _message.success({\n                info: info\n              } + \"成功!\");\n\n              _this2.requestList();\n            } else {\n              _message.error({\n                info: info\n              } + \"失败! \" + res.msg);\n            }\n          });\n        }\n      });\n    };\n\n    _this2.requestList = function () {\n      var _this = _assertThisInitialized(_this2);\n\n      axios.requestList(_this, '/getMerchantList', _this2.params, true);\n    };\n\n    return _this2;\n  }\n\n  _createClass(CpManage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var formList = [{\n        type: 'INPUT',\n        label: '商户号',\n        field: 'merchantNo',\n        width: 200,\n        placeholder: '请输入查询的商户号'\n      }, {\n        type: 'INPUT',\n        label: '商户名称',\n        field: 'merchantName',\n        width: 200,\n        placeholder: '请输入查询的商户名称'\n      }]; //设置列名\n\n      var columns = [{\n        title: 'Id',\n        dataIndex: 'id',\n        width: 80\n      }, {\n        title: '商户号',\n        dataIndex: 'merchantNo',\n        width: 80\n      }, {\n        title: '商户名称',\n        dataIndex: 'merchantName',\n        width: 120\n      }, {\n        title: '密码',\n        dataIndex: 'merchantPwd',\n        width: 80\n      }];\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        type: 'checkbox',\n        selectedRowKeys: selectedRowKeys,\n        columnWidth: 5,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this3.setState({\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(BaseForm, {\n        formList: formList,\n        filterSubmit: this.handleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(_Card, {\n        className: \"operate-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: function onClick() {\n          return _this3.handleOperate('create');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\u65B0\\u589E\\u5546\\u6237\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"edit\",\n        onClick: function onClick() {\n          return _this3.handleOperate('edit');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"\\u7F16\\u8F91\\u5546\\u6237\"), React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"delete\",\n        onClick: function onClick() {\n          return _this3.handleOperate('delete');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"\\u5220\\u9664\\u5546\\u6237\")), React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        bordered: true,\n        size: \"small\",\n        scroll: {\n          y: 240\n        },\n        columns: columns,\n        rowSelection: rowSelection,\n        pagination: this.state.pagination,\n        dataSource: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: this.state.title,\n        visible: this.state.isVisible,\n        onOk: this.handleSubmit,\n        onCancel: function onCancel() {\n          _this3.merchantForm.props.form.resetFields();\n\n          _this3.setState({\n            isVisible: false\n          });\n        },\n        width: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(MerchantForm, {\n        type: this.state.type,\n        merchantInfo: this.state.merchantInfo,\n        wrappedComponentRef: function wrappedComponentRef(inst) {\n          _this3.merchantForm = inst;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CpManage;\n}(Component);\n\nexport { CpManage as default };\n\nvar MerchantForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MerchantForm, _React$Component);\n\n  function MerchantForm() {\n    _classCallCheck(this, MerchantForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MerchantForm).apply(this, arguments));\n  }\n\n  _createClass(MerchantForm, [{\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n      var merchantInfo = this.props.merchantInfo || {};\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      };\n      return React.createElement(_Form, {\n        layout: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u53F7\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), type == 'detail' ? merchantInfo.merchantNo : getFieldDecorator('merchantNo', {\n        initialValue: merchantInfo.merchantNo,\n        rules: [{\n          required: true,\n          message: '请输入商户号!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u540D\\u79F0\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), type == 'detail' ? merchantInfo.merchantName : getFieldDecorator('merchantName', {\n        initialValue: merchantInfo.merchantName,\n        rules: [{\n          required: true,\n          message: '请输入商户名称!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\\u5BC6\\u7801\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), type == 'detail' ? merchantInfo.merchantPwd : getFieldDecorator('merchantPwd', {\n        initialValue: merchantInfo.merchantPwd,\n        rules: [{\n          required: true,\n          message: '请输入商户密码!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u6237\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MerchantForm;\n}(React.Component);\n\nMerchantForm = _Form.create({})(MerchantForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpmanage/index.js"],"names":["React","Component","FormItem","BaseForm","axios","CpManage","state","list","isVisible","params","page","handleOperate","type","items","selectedRows","info","title","content","length","setState","merchantInfo","_this","ids","map","item","id","confirm","onOk","ajax","url","data","then","res","code","success","requestList","handleFilter","handleSubmit","merchantForm","props","form","validateFields","err","values","getFieldsValue","resetFields","error","msg","formList","label","field","width","placeholder","columns","dataIndex","selectedRowKeys","rowSelection","columnWidth","onChange","y","pagination","inst","MerchantForm","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","merchantNo","initialValue","rules","required","message","merchantName","merchantPwd","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.less'\nimport FormItem from 'antd/lib/form/FormItem';\nimport { Card, message, Form, Input, Button, Table, Icon, Divider, Modal } from 'antd'\nimport BaseForm from './../../components/BaseForm/'\nimport axios from '../../axios'\nexport default class CpManage extends Component {\n\n    state = {\n        list: [],\n        isVisible: false\n    }\n    params = {\n        page: 1\n    }\n\n    handleOperate = (type) => {\n        let items = this.state.selectedRows;\n        if (type) {\n            if (type == 'edit') {\n                if (!items) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个商户'\n                    })\n                    return;\n                }\n                if (items.length > 1) {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '只能选择一个商户编辑'\n                    })\n                    return;\n                }\n\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '编辑商户',\n                    merchantInfo:items[0]\n                })\n\n\n                //显示编辑页面\n            } else if (type == 'delete') {\n                if (items && items.length >= 1) {\n                    //删除用户\n                    let _this = this;\n                    let ids = '';\n                    items.map((item) => {\n                        ids+=(item.id)+'-';\n                    })\n                    Modal.confirm({\n                        title: '确认删除',\n                        content: '是否要删除选中项',\n                        onOk() {\n                            axios.ajax({\n                                url: '/cpmanage/delete',\n                                data: {\n                                    params: {\n                                        ids:ids\n                                    }\n                                }\n                            }).then((res) => {\n                                if (res.code == 0) {\n                                    _this.setState({\n                                        isVisible: false\n                                    })\n                                    message.success(\"删除成功!\");\n                                    _this.requestList();\n                                } else {\n                                    message.success(\"删除失败!\");\n                                }\n\n                            })\n                        }\n\n                    })\n\n                } else {\n                    Modal.info({\n                        title: \"提示\",\n                        content: '请选择一个商户'\n                    })\n                    return;\n                }\n            } else if (type == 'create') {\n                this.setState({\n                    type,\n                    isVisible: true,\n                    title: '创建商户'\n                }\n                )\n            }\n        }\n\n    }\n\n    //接收baseForm 组件表单中的查询参数\n    handleFilter = (params) => {\n        this.params = params;\n        this.requestList();\n    }\n\n    // 创建/编辑商户提交\n    handleSubmit = ()=>{\n        let type = this.state.type;\n        this.merchantForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                let data = this.merchantForm.props.form.getFieldsValue();\n                let info= type=='create'?'新增':'编辑';\n                axios.ajax({\n                    url:type=='create'?'/cpmanage/add':'/cpmanage/edit',\n                    data:{\n                        params: data\n                    }\n                }).then((res)=>{\n                    if(res.code ==0){\n                        this.merchantForm.props.form.resetFields();\n                        this.setState({\n                            isVisible:false\n                        })\n                        message.success({info}+\"成功!\");\n                        this.requestList();\n                    }else{\n                        message.error({info}+\"失败! \"+res.msg);\n                    }\n                })\n            }\n          });\n       \n    }\n\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        let _this = this;\n        axios.requestList(_this, '/getMerchantList', this.params, true);\n    }\n\n    render() {\n        const formList = [\n            {\n                type: 'INPUT',\n                label: '商户号',\n                field: 'merchantNo',\n                width: 200,\n                placeholder: '请输入查询的商户号'\n            }, {\n                type: 'INPUT',\n                label: '商户名称',\n                field: 'merchantName',\n                width: 200,\n                placeholder: '请输入查询的商户名称'\n            }\n        ]\n\n        //设置列名\n        const columns = [{\n            title: 'Id',\n            dataIndex: 'id',\n            width: 80\n        }, {\n            title: '商户号',\n            dataIndex: 'merchantNo',\n            width: 80\n        }, {\n            title: '商户名称',\n            dataIndex: 'merchantName',\n            width: 120\n        }, {\n            title: '密码',\n            dataIndex: 'merchantPwd',\n            width: 80\n        }];\n        const selectedRowKeys = this.state.selectedRowKeys;\n\n        const rowSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            columnWidth: 5,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                })\n            }\n        }\n\n        return (\n            <div>\n                <Card >\n                    <BaseForm formList={formList} filterSubmit={this.handleFilter} />\n                </Card>\n\n                <Card className='operate-wrap'>\n                    <Button type='primary' icon='plus' onClick={() => this.handleOperate('create')}>新增商户</Button>\n                    <Button type='primary' icon='edit' onClick={() => this.handleOperate('edit')}>编辑商户</Button>\n                    <Button type='primary'  icon='delete' onClick={() => this.handleOperate('delete')}>删除商户</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        size='small'\n                        scroll={{ y: 240 }}\n                        columns={columns}\n                        rowSelection={rowSelection}\n                        pagination={this.state.pagination}\n                        dataSource={this.state.list}\n                    />\n                </div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={()=>{\n                        this.merchantForm.props.form.resetFields();\n                        this.setState({\n                            isVisible:false\n                        })\n                    }}\n                    width={600}\n                \n                >\n                    <MerchantForm type={this.state.type}  merchantInfo={this.state.merchantInfo} wrappedComponentRef={(inst)=>{this.merchantForm = inst;}}/>\n                </Modal>\n\n            </div>\n        );\n    }\n\n}\nclass MerchantForm extends React.Component{\n\n\n\n    render(){\n        let type = this.props.type;\n        let merchantInfo = this.props.merchantInfo || {};\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"商户号\" {...formItemLayout}>\n                    {\n                        type == 'detail'?merchantInfo.merchantNo:\n                        getFieldDecorator('merchantNo',{\n                            initialValue:merchantInfo.merchantNo,\n                            rules: [{ required: true, message: '请输入商户号!' }]\n                        })(\n                            <Input  type=\"text\" placeholder=\"请输入商户号\"/> \n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户名称\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? merchantInfo.merchantName :\n                        getFieldDecorator('merchantName',{\n                            initialValue: merchantInfo.merchantName,\n                            rules: [{ required: true, message: '请输入商户名称!' }]\n                        })(\n                            <Input  type=\"text\" placeholder=\"请输入商户名称\"/> \n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"商户密码\" {...formItemLayout}>\n                    {\n                        type == 'detail' ? merchantInfo.merchantPwd:\n                        getFieldDecorator('merchantPwd',{\n                            initialValue: merchantInfo.merchantPwd,\n                            rules: [{ required: true, message: '请输入商户密码!' }]\n                        })(\n                            <Input  type=\"text\" placeholder=\"请输入商户密码\"/> \n                        )\n                    }\n                </FormItem>\n            </Form> \n        );\n    }\n}\nMerchantForm = Form.create({})(MerchantForm);"]},"metadata":{},"sourceType":"module"}