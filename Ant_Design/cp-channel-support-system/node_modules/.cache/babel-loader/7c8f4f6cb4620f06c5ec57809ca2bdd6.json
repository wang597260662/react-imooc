{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelbind/edit.js\";\nimport React from 'react';\nimport Utils from './../../utils/utils';\nimport './index.less';\nvar FormItem = _Form.Item;\n\nvar CpChannelBindEditForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CpChannelBindEditForm, _React$Component);\n\n  function CpChannelBindEditForm() {\n    _classCallCheck(this, CpChannelBindEditForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CpChannelBindEditForm).apply(this, arguments));\n  }\n\n  _createClass(CpChannelBindEditForm, [{\n    key: \"render\",\n    value: function render() {\n      var cpChannelBind = this.props.cpChannelBind || {};\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 5\n        },\n        wrapperCol: {\n          span: 19\n        }\n      };\n      return React.createElement(_Form, {\n        layout: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({\n        label: \"\\u5546\\u6237\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), getFieldDecorator('merchantNo', {\n        initialValue: cpChannelBind.merchantNo,\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: '请选择一个商户!'\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, Utils.getOptionList(this.props.merchantList)))), React.createElement(FormItem, Object.assign({\n        label: \"AppId\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), getFieldDecorator('appId', {\n        initialValue: cpChannelBind.appId,\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: '请选择一个appId!'\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, Utils.getOptionList(this.props.appIdList)))), React.createElement(FormItem, Object.assign({\n        label: \"codeType\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), getFieldDecorator('codeType', {\n        initialValue: cpChannelBind.codeType,\n        validateTrigger: ['onChange', 'onBlur'],\n        rules: [{\n          required: true,\n          message: \"请选择一个CodeType!\"\n        }]\n      })(React.createElement(_Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, Utils.getOptionList(this.props.codeTypeList)))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4EE3\\u7801\\u540D\\u79F0\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), getFieldDecorator('codeName', {\n        validateTrigger: ['onChange', 'onBlur'],\n        initialValue: cpChannelBind.codeName,\n        rules: [{\n          required: true,\n          whitespace: true,\n          message: '请输入代码名称!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EE3\\u7801\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({\n        label: \"\\u4EE3\\u7801\\u6D41\\u7A0B\"\n      }, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), getFieldDecorator('codeProcess', {\n        validateTrigger: ['onChange', 'onBlur'],\n        initialValue: cpChannelBind.codeProcess,\n        rules: [{\n          required: true,\n          whitespace: true,\n          message: '请选择一个代码流程!'\n        }]\n      })(React.createElement(_Input, {\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EE3\\u7801\\u6D41\\u7A0B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CpChannelBindEditForm;\n}(React.Component);\n\nexport default _Form.create({})(CpChannelBindEditForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/pages/cpchannelbind/edit.js"],"names":["React","Utils","FormItem","Item","CpChannelBindEditForm","cpChannelBind","props","getFieldDecorator","form","formItemLayout","labelCol","span","wrapperCol","initialValue","merchantNo","validateTrigger","rules","required","message","getOptionList","merchantList","appId","appIdList","codeType","codeTypeList","codeName","whitespace","codeProcess","Component","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Select, Input, Modal, message, Card, Button, Table, Form, Icon } from 'antd';\nimport Utils from './../../utils/utils'\nimport './index.less';\nconst FormItem = Form.Item\n\n\nclass CpChannelBindEditForm extends React.Component{\n\n\n\n    render(){\n       \n        let cpChannelBind = this.props.cpChannelBind || {};\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n        return (\n            <Form layout=\"horizontal\">\n              \n              <FormItem label=\"商户\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('merchantNo', {\n                            initialValue:cpChannelBind.merchantNo,\n                            validateTrigger: ['onChange', 'onBlur'],\n                            rules: [{ required: true, message: '请选择一个商户!' }]\n                        })(\n                            <Select>\n                                {Utils.getOptionList(this.props.merchantList)}\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"AppId\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('appId', {\n                            initialValue: cpChannelBind.appId,\n                            validateTrigger: ['onChange', 'onBlur'],\n                            rules: [{ required: true, message: '请选择一个appId!' }]\n                        })(\n                            <Select>\n                                {Utils.getOptionList(this.props.appIdList)}\n                            </Select>\n                        )\n                    }\n                </FormItem>\n                <FormItem label=\"codeType\"  {...formItemLayout}\n                >\n                    {getFieldDecorator('codeType', {\n                         initialValue: cpChannelBind.codeType,\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [{\n                            required: true,\n                            message: \"请选择一个CodeType!\",\n                        }],\n                    })(\n                        <Select>\n                            {Utils.getOptionList(this.props.codeTypeList)}\n                        </Select>\n                    )}\n\n\n                </FormItem>\n                <FormItem label=\"代码名称\" {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('codeName', {\n                            validateTrigger: ['onChange', 'onBlur'],\n                            initialValue: cpChannelBind.codeName,\n                            rules: [{\n                                required: true,\n                                whitespace: true,\n                                message: '请输入代码名称!'\n                            }]\n                        })(\n                            <Input type='text' placeholder='请输入代码名称'></Input>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"代码流程\"  {...formItemLayout}>\n                    {\n\n                        getFieldDecorator('codeProcess', {\n                            validateTrigger: ['onChange', 'onBlur'],\n                            initialValue: cpChannelBind.codeProcess,\n                            rules: [{\n                                required: true,\n                                whitespace: true,\n                                message: '请选择一个代码流程!'\n                            }]\n                        })(\n                            <Input type='text' placeholder='请输入代码流程'></Input>\n                        )\n                    }\n                </FormItem>\n            </Form> \n        );\n    }\n}\n export default Form.create({})(CpChannelBindEditForm);"]},"metadata":{},"sourceType":"module"}