{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/components/BaseForm/index.js\";\nimport React, { Component } from 'react';\nimport Utils from './../../utils/utils';\nvar FormItem = _Form.Item;\nvar Option = _Select.Option;\n\nvar FilterForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterForm, _Component);\n\n  function FilterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFilterSubmit = function () {\n      var fieldsValue = _this.props.form.getFieldsValue();\n\n      _this.props.filterSubmit(fieldsValue);\n    };\n\n    _this.reset = function () {\n      _this.props.form.resetFields();\n    };\n\n    _this.initFormList = function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var formList = _this.props.formList;\n      var formItemList = [];\n\n      if (formList && formList.length > 0) {\n        formList.map(function (item) {\n          var type = item.type;\n          var lable = item.label;\n          var initiaValue = item.initiaValue || '';\n          var placeholder = item.placeholder;\n          var width = item.width;\n          var field = item.field;\n\n          if (type == 'INPUT') {\n            var INPUT = React.createElement(FormItem, {\n              label: lable,\n              key: field,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, getFieldDecorator([field], {\n              initiaValue: initiaValue\n            })(React.createElement(_Input, {\n              style: {\n                width: width\n              },\n              placeholder: placeholder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            })));\n            formItemList.push(INPUT);\n          } else if (type == 'SELECT') {\n            var SELECT = React.createElement(FormItem, {\n              label: label,\n              key: field,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, getFieldDecorator([field], {\n              initialValue: initialValue\n            })(React.createElement(_Select, {\n              style: {\n                width: width\n              },\n              placeholder: placeholder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }, Utils.getOptionList(item.list))));\n            formItemList.push(SELECT);\n          }\n        });\n      }\n\n      return formItemList;\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.initFormList(), React.createElement(_Button, {\n        type: \"primary\",\n        style: {\n          marginTop: 5\n        },\n        onClick: this.handleFilterSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\"), React.createElement(_Button, {\n        style: {\n          marginLeft: 20\n        },\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\"));\n    }\n  }]);\n\n  return FilterForm;\n}(Component);\n\nexport default _Form.create({})(FilterForm);","map":{"version":3,"sources":["/Users/wanghaojie/Ant_Design/cp-channel-support-system/src/components/BaseForm/index.js"],"names":["React","Component","Utils","FormItem","Item","Option","FilterForm","handleFilterSubmit","fieldsValue","props","form","getFieldsValue","filterSubmit","reset","resetFields","initFormList","getFieldDecorator","formList","formItemList","length","map","item","type","lable","label","initiaValue","placeholder","width","field","INPUT","push","SELECT","initialValue","getOptionList","list","marginTop","marginLeft","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Input,Select, Button, Form, Checkbox, Radio } from 'antd';\nimport Utils from './../../utils/utils';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nclass FilterForm extends Component {\n    handleFilterSubmit=()=>{\n        let fieldsValue=this.props.form.getFieldsValue();\n        this.props.filterSubmit(fieldsValue);\n    }\n\n    reset=()=>{\n        this.props.form.resetFields();\n    }\n\n    initFormList = () => {\n        const { getFieldDecorator } = this.props.form;\n        const formList = this.props.formList;\n        const formItemList = [];\n        if (formList && formList.length>0) {\n            formList.map((item) => {\n                let type = item.type;\n                let lable = item.label;\n                let initiaValue = item.initiaValue || '';\n                let placeholder = item.placeholder;\n                let width = item.width;\n                let field = item.field;\n\n                if (type == 'INPUT') {\n                    const INPUT = <FormItem label={lable} key={field}>\n                        {getFieldDecorator([field], {\n                            initiaValue: initiaValue\n                        })(\n                            <Input  style={{ width: width }} placeholder={placeholder} />\n                        )}\n                    </FormItem>\n                    formItemList.push(INPUT);\n                } else if (type == 'SELECT') {\n                    const SELECT = <FormItem label={label} key={field}>\n                    {\n                        getFieldDecorator([field], {\n                            initialValue: initialValue\n                        })(\n                            <Select\n                                style={{ width: width }}\n                                placeholder={placeholder}\n                            >\n                                {Utils.getOptionList(item.list)}\n                            </Select>\n                        )\n                    }\n                </FormItem>;\n                formItemList.push(SELECT);\n                }\n            })\n        }\n        return formItemList;\n    }\n\n    render() {\n        return (<Form layout='inline'>\n            {this.initFormList()}\n            <Button type='primary' style={{marginTop:5}} onClick={this.handleFilterSubmit} >查询</Button>\n            <Button  style={{marginLeft:20 }} onClick={this.reset} >重置</Button>\n        </Form>);\n    }\n\n}\nexport default Form.create({})(FilterForm);"]},"metadata":{},"sourceType":"module"}